---
title: "지시함수"
date: "2023/10/12"
author: "Sungil Park"
---

```{r, include=FALSE}
rm(list=ls())
library(tidyverse)
library(knitr)
```

## Data

```{r}
data <- readxl::read_xlsx("posts/contents/2. 예측수준의 결정.xlsx",sheet = 1)

data$month <- substr(data$yymm,6,8)

data$quarter <- ifelse(substr(data$yymm,6,8) %in% 
                         c("01", "02", "03"), "Q1",
                     ifelse(substr(data$yymm,6,8) %in% 
                              c("04", "05", "06"), "Q2",
                            ifelse(substr(data$yymm,6,8) %in% 
                                     c("07", "08", "09"), "Q3", "Q4")))

data %>% kable()
```

## 월별

### Summary

```{r}
model <- lm(market ~ t+factor(month), data = data)
model %>% summary
```

p-value 가 6.202e-12로 0.05보다 작으므로 유의하다고 볼 수 있다.

R-squared 값이 0.9486로 설명력이 높다고 볼 수 있다.

```{r}
ggplot(data, aes(x = t, y = market, color = month)) +
  geom_point() +    
  geom_smooth(method = "lm", se = FALSE) +  
  labs(title = "", x = "t", y = "market") +
  theme_minimal()
```

### 예측

```{r}
linear_regression <- function(t) {
  y <- 5255032 + 64998  * t
  return(y)
}

pred_t <- c(37:48)
pred_yymm <- c("2023.01","2023.02","2023.03"
               ,"2023.04","2023.05","2023.06"
               ,"2023.07","2023.08","2023.09"
               ,"2023.10","2023.11","2023.12")
pred_market <- linear_regression(pred_t)

data_pred <- data.frame(pred_t,pred_yymm,pred_market)

for (i in 2:12) {
  data_pred$pred_market[i] <- data_pred$pred_market[i] + model$coefficients[i + 1]
}

data_pred %>% kable()
```

## 분기별

```{r}
model_2 <- lm(market ~ t+factor(quarter), data = data)
model_2 %>% summary
```

1분기

`y = 5170133 + 64380x`

2분기

`y = 5170133 + 64380x + 2169493`

3분기

`y = 5170133 + 64380x - 741959`

4분기

`y = 5170133 + 64380x + 2897245`

```{r}
ggplot(data, aes(x = t, y = market, color = quarter)) +
  geom_point() +    
  geom_smooth(method = "lm", se = FALSE) +  
  labs(title = "", x = "t", y = "market") +
  theme_minimal()
```

## Data

```{r}
data <- readxl::read_xlsx("posts/contents/2. 예측수준의 결정.xlsx",sheet = 1)

data$month <- substr(data$yymm,6,8)
data$year <- substr(data$yymm,1,4)

data$quarter <- ifelse(substr(data$yymm,6,8) %in% 
                         c("01", "02", "03"), "Q1",
                     ifelse(substr(data$yymm,6,8) %in% 
                              c("04", "05", "06"), "Q2",
                            ifelse(substr(data$yymm,6,8) %in% 
                                     c("07", "08", "09"), "Q3", "Q4")))

data %>% head()
```

```{r}
ggplot(data, aes(x = t, y = market, color = year)) +
  geom_point()+
  geom_line()+
  theme_minimal()
```

```{r}
data[c("t","market")] %>% kable()
```

```{r}
# Your data
t <- 1:36
market <- c(
  5238500, 4775400, 5916100, 7929800, 8008500, 6293300, 4182700, 4118900,
  6592500, 8618600, 8767400, 7748900, 6511500, 5523400, 7364600, 8607400,
  9470900, 7742000, 5285500, 5240300, 8001100, 10318600, 10330500, 8428700,
  6550000, 5592500, 7171100, 11005000, 8824600, 8025300, 5223500, 4723100,
  8074400, 11198700, 11798500, 8723200
)

# Create a data frame
data <- data.frame(t, market)

library(rpart)
library(rpart.plot)

# Fit a decision tree model with control parameters
control_params <- rpart.control(minsplit = 5, minbucket = 5)  # Adjust these values as needed
tree_model <- rpart(market ~ t, data = data, control = control_params)

# Visualize the decision tree
library(rpart.plot)
rpart.plot(tree_model, type = 4, extra = 101, under = TRUE, tweak = 1.2)


```

```{r}
plot(data$market,predict(tree_model,data.frame(t)))


```

```{r}
# Load the required packages
library(rpart)
library(rpart.plot)
library(ggplot2)

# Your data
t <- 1:36
market <- c(
  5238500, 4775400, 5916100, 7929800, 8008500, 6293300, 4182700, 4118900,
  6592500, 8618600, 8767400, 7748900, 6511500, 5523400, 7364600, 8607400,
  9470900, 7742000, 5285500, 5240300, 8001100, 10318600, 10330500, 8428700,
  6550000, 5592500, 7171100, 11005000, 8824600, 8025300, 5223500, 4723100,
  8074400, 11198700, 11798500, 8723200
)

# Create a data frame
data <- data.frame(t, market)

# Fit a decision tree model
tree_model <- rpart(market ~ t, data = data)

# Create a scatter plot
scatter_plot <- ggplot(data, aes(x = t, y = market)) +
  geom_point() +  # Scatter plot
  geom_smooth(method = "lm", se = FALSE, color = "blue", formula = y ~ x) +  # Linear regression line
  geom_smooth(data = data.frame(t = t, market = predict(tree_model)), method = "lm", se = FALSE, color = "red", formula = y ~ x) +  # Decision tree model line
  labs(title = "Scatter Plot with Decision Tree Regression Line", x = "t", y = "market")

# Print the plot
print(scatter_plot)

```
