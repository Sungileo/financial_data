[
  {
    "objectID": "index.html",
    "href": "index.html",
    "title": "금융데이터분석_R",
    "section": "",
    "text": "_\n\n\n\n\n\n2023-2학기 R로 하는 금융데이터분석\n\n\n\n\n\n\nNov 16, 2023\n\n\nSungil Park\n\n\n\n\n\n\n  \n\n\n\n\nANOVA\n\n\n\n\n\n2023-2학기 R로 하는 금융데이터분석\n\n\n\n\n\n\nNov 14, 2023\n\n\nSungil Park\n\n\n\n\n\n\n  \n\n\n\n\n정리\n\n\n\n\n\n2023-2학기 R로 하는 금융데이터분석\n\n\n\n\n\n\nNov 9, 2023\n\n\nSungil Park\n\n\n\n\n\n\n  \n\n\n\n\n2023 빈도&심도 예측_\n\n\n\n\n\n2023-2학기 R로 하는 금융데이터분석\n\n\n\n\n\n\nNov 7, 2023\n\n\nSungil Park\n\n\n\n\n\n\n  \n\n\n\n\n2023 빈도&심도 예측\n\n\n\n\n\n2023-2학기 R로 하는 금융데이터분석\n\n\n\n\n\n\nNov 2, 2023\n\n\nSungil Park\n\n\n\n\n\n\n  \n\n\n\n\n분기별 선형모형_2\n\n\n\n\n\n2023-2학기 R로 하는 금융데이터분석\n\n\n\n\n\n\nOct 31, 2023\n\n\nSungil Park\n\n\n\n\n\n\n  \n\n\n\n\n분기별 선형모형\n\n\n\n\n\n2023-2학기 R로 하는 금융데이터분석\n\n\n\n\n\n\nOct 26, 2023\n\n\nSungil Park\n\n\n\n\n\n\n  \n\n\n\n\n빈도, 심도 선형회귀\n\n\n\n\n\n2023-2학기 R로 하는 금융데이터분석\n\n\n\n\n\n\nOct 24, 2023\n\n\nSungil Park\n\n\n\n\n\n\n  \n\n\n\n\n지시함수\n\n\n\n\n\n2023-2학기 R로 하는 금융데이터분석\n\n\n\n\n\n\nOct 12, 2023\n\n\nSungil Park\n\n\n\n\n\n\n  \n\n\n\n\n회귀분석\n\n\n\n\n\n2023-2학기 R로 하는 금융데이터분석\n\n\n\n\n\n\nOct 10, 2023\n\n\nSungil Park\n\n\n\n\n\n\n  \n\n\n\n\n빈도와 심도\n\n\n\n\n\n2023-2학기 R로 하는 금융데이터분석\n\n\n\n\n\n\nSep 14, 2023\n\n\nSungil Park\n\n\n\n\n\n\nNo matching items"
  },
  {
    "objectID": "about.html",
    "href": "about.html",
    "title": "Sungil Park",
    "section": "",
    "text": "sungileo@naver.com"
  },
  {
    "objectID": "posts/0914_pt1.html#r",
    "href": "posts/0914_pt1.html#r",
    "title": "PT.1 - 설치 & R에 대해",
    "section": "R",
    "text": "R\n\nR에 대해\n\n통계 계산과 그래픽을 위한 프로그래밍 언어이자 소프트웨어 환경\n뉴질랜드 오클랜드 대학의 로스 이하카와 로버트 젠틀맨에 의해 개발(1992)\nGPL 하에 배포되어 비용에 부담없이 자유롭게 사용\n많은 연구자들에 의해 새롭게 만들어진 최신의 알고리즘과 로직들을 Package 형태로 제공하여 다른 어떤 통계 소프트웨어들보다도 다양한 분석방법 등을 제공\n초기 접근이 다른 통계 소프트웨어보다 불편하게 느껴질 수 있지만, 익숙해지면 편하게 다룰 수 있음\n\n\n\n설치\nr-project.org\ncran\n\nR 패키지를 호스팅, 저장, 공유하는 공식적인 위치\n영남대 cran"
  },
  {
    "objectID": "posts/0914_pt1.html#rstudio",
    "href": "posts/0914_pt1.html#rstudio",
    "title": "PT.1 - 설치 & R에 대해",
    "section": "Rstudio",
    "text": "Rstudio\n\nRstudio\n\nR 프로그래밍 언어와 관련된 통합 개발 환경(IDE) 중 하나\nR 패키지를 설치하고 관리하는 도구를 제공, 함수 및 패키지에 대한 도움말에 쉽게 액세스\n데이터 구조를 검사하고 조작하는 도구를 제공, 스크립트 편집\n프로젝트관리, 버전관리, Git, 보고서 작성 등등..\n\n\n\n설치\nPosit"
  },
  {
    "objectID": "posts/1010_pt2.html",
    "href": "posts/1010_pt2.html",
    "title": "PT.2 - 벡터, 리스트, 팩터, 행렬",
    "section": "",
    "text": "tap 은 자동완성\nF1 은 함수 설명 문서 보기"
  },
  {
    "objectID": "posts/1010_pt2.html#tip",
    "href": "posts/1010_pt2.html#tip",
    "title": "PT.2 - 벡터, 리스트, 팩터, 행렬",
    "section": "",
    "text": "tap 은 자동완성\nF1 은 함수 설명 문서 보기"
  },
  {
    "objectID": "posts/1010_pt2.html#변수-지우기",
    "href": "posts/1010_pt2.html#변수-지우기",
    "title": "PT.2 - 벡터, 리스트, 팩터, 행렬",
    "section": "변수 지우기",
    "text": "변수 지우기\nrm = remove 줄임말\nls()는 전체 변수 출력\nrm(list = ls())는 전체변수 삭제\nrm(변수명)은 변수명만 삭제\n\nremove(list = ls())\nrm(list = ls())\n\n\nrm(변수명)"
  },
  {
    "objectID": "posts/1010_pt2.html#벡터",
    "href": "posts/1010_pt2.html#벡터",
    "title": "PT.2 - 벡터, 리스트, 팩터, 행렬",
    "section": "벡터",
    "text": "벡터\nGNP &lt;- c(2090,2450,960)\n\nGNP 라는 변수에 2090, 2450, 960 3개의 숫자 요소를 가진 벡터 생성\n\nnames(GNP) &lt;- c(\"korea\",\"japan\",\"nepal\")\n\n각 요소에 “korea”, “japan”, “nepal”의 이름 지정\n\n\nGNP &lt;- c(2090,2450,960)\nnames(GNP) &lt;- c(\"korea\",\"japan\",\"nepal\")\n\n\n요소에 지정된 이름으로 값 출력 (인덱싱)\n단일 값 출력\n\nGNP[\"korea\"]\n\nkorea \n 2090 \n\n\n벡터 사용 여러개의 값 출력\n\nGNP[c(\"korea\",\"nepal\")]\n\nkorea nepal \n 2090   960"
  },
  {
    "objectID": "posts/1010_pt2.html#변수에-조건을-지정하기",
    "href": "posts/1010_pt2.html#변수에-조건을-지정하기",
    "title": "PT.2 - 벡터, 리스트, 팩터, 행렬",
    "section": "변수에 조건을 지정하기",
    "text": "변수에 조건을 지정하기\nd 라는 변수에 1~9까지의 숫자 벡터 생성\n\nd &lt;- c(1,2,3,4,5,6,7,8,9)\nd &lt;- c(1:9) \n\ncondi 라는 변수에 7이하 & 3이상을 만족하는 d 지정\n\nTRUE, FALSE 값으로 출력\n\n\ncondi &lt;- d &lt;= 7 & d &gt;= 3\n\ncondi\n\n[1] FALSE FALSE  TRUE  TRUE  TRUE  TRUE  TRUE FALSE FALSE\n\n\n\n인덱싱으로 d에서의 값 출력하기\n\n\nd[condi]\n\n[1] 3 4 5 6 7\n\n\n& : 두 조건을 모두 만족해야됨, (7보다 작으면서, 3보다 큰 수)\n| : 두 조건중 하나만 만족하면됨, (7보다 크거나, 3보다 작거나), (엔터키 위 shift + \\)\n\ncondi_2 &lt;- d &lt;= 3 | d &gt;= 7\nd[condi]\n\n[1] 3 4 5 6 7"
  },
  {
    "objectID": "posts/1010_pt2.html#리스트",
    "href": "posts/1010_pt2.html#리스트",
    "title": "PT.2 - 벡터, 리스트, 팩터, 행렬",
    "section": "리스트",
    "text": "리스트\n\n벡터는 한가지 타입의 요소들만을 담을 수 있음 (숫자면 숫자만, 문자면 문자만)\n리스트는 여러가지 타입의 요소를 담을 수 있음\n\n\nlist_example &lt;- list(1, 2, c(3,4), \"munja\", TRUE, FALSE)\n\nlist_example\n\n[[1]]\n[1] 1\n\n[[2]]\n[1] 2\n\n[[3]]\n[1] 3 4\n\n[[4]]\n[1] \"munja\"\n\n[[5]]\n[1] TRUE\n\n[[6]]\n[1] FALSE\n\n\n\n리스트와 생성\n\nmy.info &lt;- list(name='Tom', \n                age=60, \n                status=TRUE, \n                score=c(90, 85, 70, 84))\n\n\n\n리스트 출력\n\nmy.info\n\n$name\n[1] \"Tom\"\n\n$age\n[1] 60\n\n$status\n[1] TRUE\n\n$score\n[1] 90 85 70 84\n\n\n\n\n리스트의 인덱싱\n\n# 첫째 요소\nmy.info[1]\n\n$name\n[1] \"Tom\"\n\n# 이름이 name인 요소\nmy.info$name\n\n[1] \"Tom\"\n\n# 리스트의 2,3번쨰 요소\nmy.info[c(2,3)]\n\n$age\n[1] 60\n\n$status\n[1] TRUE"
  },
  {
    "objectID": "posts/1010_pt2.html#팩터",
    "href": "posts/1010_pt2.html#팩터",
    "title": "PT.2 - 벡터, 리스트, 팩터, 행렬",
    "section": "팩터",
    "text": "팩터\n\n팩터는 범주형 데이터를 지정하는데 사용\n예시)\n\nbt.vct 라는 문자형 변수 벡터 지정\nbt.fct 라는 팩터 지정\n\n\n\n팩터 요소 확인하기\n\nbt.vct &lt;- c('A','B','B','O','AB','A')\n\nbt.fct &lt;- factor(bt.vct)\n\nstr()함수는 지정한 변수의 타입을 확인할때 사용\n\nstr(bt.vct)\n\n chr [1:6] \"A\" \"B\" \"B\" \"O\" \"AB\" \"A\"\n\nstr(bt.fct)\n\n Factor w/ 4 levels \"A\",\"AB\",\"B\",\"O\": 1 3 3 4 2 1\n\n\nlevels()함수는 팩터 변수의 요소값을 확인할때 사용\n\nlevels(bt.fct)\n\n[1] \"A\"  \"AB\" \"B\"  \"O\" \n\n\n\n\n팩터의 인덱싱\n\nbt.fct[5]\n\n[1] AB\nLevels: A AB B O\n\nbt.fct[c(2,5)]\n\n[1] B  AB\nLevels: A AB B O\n\n\n팩터,벡터를 숫자형으로 바꾸기\n\nas.integer(bt.fct)\n\n[1] 1 3 3 4 2 1\n\nas.integer(bt.vct)\n\nWarning: 강제형변환에 의해 생성된 NA 입니다\n\n\n[1] NA NA NA NA NA NA\n\n\n\n\n팩터에 값 추가\n\n# 기존 6개 값을 가진 팩터에 7번째 값 추가\nbt.fct[7] &lt;- 'B'\nbt.fct\n\n[1] A  B  B  O  AB A  B \nLevels: A AB B O\n\n\n\n\n요소 외 값 추가\n\n# 팩터 요소(A, AB, B, O)에 포함되지 않은 값을 추가하면..\n# Warning message = 경고(O), 에러(X)\n# NA 값으로 입력됨\nbt.fct[8] &lt;- 'C'     \n\nWarning in `[&lt;-.factor`(`*tmp*`, 8, value = \"C\"): 요인의 수준(factor level)이\n올바르지 않아 NA가 생성되었습니다.\n\nbt.fct\n\n[1] A    B    B    O    AB   A    B    &lt;NA&gt;\nLevels: A AB B O\n\n\n\n\n팩터의 요소 추가\n\nlevels() 함수를 써서 \"C\" 요소 추가\n8번째 값에 \"C\" 추가\n\n\nlevels(bt.fct) &lt;- c(levels(bt.fct),\"C\")\nbt.fct[8] &lt;- 'C'     \nbt.fct\n\n[1] A  B  B  O  AB A  B  C \nLevels: A AB B O C"
  },
  {
    "objectID": "posts/1010_pt2.html#행렬-matrix",
    "href": "posts/1010_pt2.html#행렬-matrix",
    "title": "PT.2 - 벡터, 리스트, 팩터, 행렬",
    "section": "행렬 (matrix)",
    "text": "행렬 (matrix)\n\n행렬의 생성\nz 라는 변수에 1~20 의 값, 4행 5열의 행렬 생성 (행 우선)\n\nz &lt;- matrix(1:20, nrow=4, ncol=5)\nz\n\n     [,1] [,2] [,3] [,4] [,5]\n[1,]    1    5    9   13   17\n[2,]    2    6   10   14   18\n[3,]    3    7   11   15   19\n[4,]    4    8   12   16   20\n\n\nz1 라는 변수에 1~20 의 값, 4행 5열의 행렬 생성 (열 우선)\n\nz1 &lt;- matrix(1:20, nrow=4, ncol=5, byrow=TRUE)\nz1\n\n     [,1] [,2] [,3] [,4] [,5]\n[1,]    1    2    3    4    5\n[2,]    6    7    8    9   10\n[3,]   11   12   13   14   15\n[4,]   16   17   18   19   20\n\n\n\n\n행렬 붙히기 (combine)\nx, y라는 변수에 4개의 값을 가진 벡터 생성\nz 라는 변수에 1~20 의 값, 4행 5열의 행렬 생성\n\nx &lt;- 1:4\ny &lt;- 5:8\nz &lt;- matrix(1:20, nrow=4, ncol=5)\n\ncbind() 함수는 열 기준으로 값을 붙힌다.(column bind)\nrbind() 함수는 행 기준으로 값을 붙힌다.(row bind)\n\nm1 &lt;- cbind(x,y)\nm1\n\n     x y\n[1,] 1 5\n[2,] 2 6\n[3,] 3 7\n[4,] 4 8\n\nm2 &lt;- rbind(x,y)\nm2\n\n  [,1] [,2] [,3] [,4]\nx    1    2    3    4\ny    5    6    7    8\n\n\n\nm3 &lt;- rbind(m2,x)\nm3\n\n  [,1] [,2] [,3] [,4]\nx    1    2    3    4\ny    5    6    7    8\nx    1    2    3    4\n\n\n\nm4 &lt;- cbind(z,x)\nm4\n\n                  x\n[1,] 1 5  9 13 17 1\n[2,] 2 6 10 14 18 2\n[3,] 3 7 11 15 19 3\n[4,] 4 8 12 16 20 4\n\n\n\n\n행렬의 인덱싱\n\npython과는 달리 1부터 시작\n\n\nz &lt;- matrix(1:20, nrow=4, ncol=5)\nz\n\n     [,1] [,2] [,3] [,4] [,5]\n[1,]    1    5    9   13   17\n[2,]    2    6   10   14   18\n[3,]    3    7   11   15   19\n[4,]    4    8   12   16   20\n\n\nmatrix[행, 열]\n\n# 2행 3열의 값\nz[2,3]\n\n[1] 10\n\n# 2행의 모든 값\nz[2,]\n\n[1]  2  6 10 14 18\n\n# 4열의 모든 값\nz[,4]\n\n[1] 13 14 15 16\n\n# 모든 값\nz[]\n\n     [,1] [,2] [,3] [,4] [,5]\n[1,]    1    5    9   13   17\n[2,]    2    6   10   14   18\n[3,]    3    7   11   15   19\n[4,]    4    8   12   16   20\n\n\n\n# 2행 1~3열의 값\nz[2, 1:3]\n\n[1]  2  6 10\n\n# 1행 1, 2, 4 열의 값\nz[1, c(1,2,4)]\n\n[1]  1  5 13\n\n# 1~2행의 모든 값\nz[1:2, ]\n\n     [,1] [,2] [,3] [,4] [,5]\n[1,]    1    5    9   13   17\n[2,]    2    6   10   14   18\n\n# 1열, 4열의 모든 값\nz[, c(1,4)]\n\n     [,1] [,2]\n[1,]    1   13\n[2,]    2   14\n[3,]    3   15\n[4,]    4   16\n\n\n\n\n행렬의 행이름, 열이름 넣기\n\nscore &lt;- matrix(c(90,85,69,78,85,96,49,95,90,80,70,60), nrow=4, ncol=3)\ncolnames(score) &lt;- c(\"국어\",\"영어\",\"수학\")\nrownames(score) &lt;- c(\"철수\",\"영희\",\"릅신\",\"조던\")\nscore\n\n     국어 영어 수학\n철수   90   85   90\n영희   85   96   80\n릅신   69   49   70\n조던   78   95   60"
  },
  {
    "objectID": "posts/1010_Regression.html",
    "href": "posts/1010_Regression.html",
    "title": "회귀분석",
    "section": "",
    "text": "rm(list=ls())\nlibrary(tidyverse)\n\n── Attaching core tidyverse packages ──────────────────────── tidyverse 2.0.0 ──\n✔ dplyr     1.1.3     ✔ readr     2.1.4\n✔ forcats   1.0.0     ✔ stringr   1.5.0\n✔ ggplot2   3.4.3     ✔ tibble    3.2.1\n✔ lubridate 1.9.2     ✔ tidyr     1.3.0\n✔ purrr     1.0.2     \n── Conflicts ────────────────────────────────────────── tidyverse_conflicts() ──\n✖ dplyr::filter() masks stats::filter()\n✖ dplyr::lag()    masks stats::lag()\nℹ Use the conflicted package (&lt;http://conflicted.r-lib.org/&gt;) to force all conflicts to become errors\n\nlibrary(knitr)"
  },
  {
    "objectID": "posts/1010_Regression.html#data",
    "href": "posts/1010_Regression.html#data",
    "title": "회귀분석",
    "section": "Data",
    "text": "Data\n\ndata &lt;- readxl::read_xlsx(\"contents/2. 예측수준의 결정.xlsx\",sheet = 1)\nkable(data)\n\n\n\n\nt\nyymm\nmarket\n\n\n\n\n1\n2020.01\n5238500\n\n\n2\n2020.02\n4775400\n\n\n3\n2020.03\n5916100\n\n\n4\n2020.04\n7929800\n\n\n5\n2020.05\n8008500\n\n\n6\n2020.06\n6293300\n\n\n7\n2020.07\n4182700\n\n\n8\n2020.08\n4118900\n\n\n9\n2020.09\n6592500\n\n\n10\n2020.10\n8618600\n\n\n11\n2020.11\n8767400\n\n\n12\n2020.12\n7748900\n\n\n13\n2021.01\n6511500\n\n\n14\n2021.02\n5523400\n\n\n15\n2021.03\n7364600\n\n\n16\n2021.04\n8607400\n\n\n17\n2021.05\n9470900\n\n\n18\n2021.06\n7742000\n\n\n19\n2021.07\n5285500\n\n\n20\n2021.08\n5240300\n\n\n21\n2021.09\n8001100\n\n\n22\n2021.10\n10318600\n\n\n23\n2021.11\n10330500\n\n\n24\n2021.12\n8428700\n\n\n25\n2022.01\n6550000\n\n\n26\n2022.02\n5592500\n\n\n27\n2022.03\n7171100\n\n\n28\n2022.04\n11005000\n\n\n29\n2022.05\n8824600\n\n\n30\n2022.06\n8025300\n\n\n31\n2022.07\n5223500\n\n\n32\n2022.08\n4723100\n\n\n33\n2022.09\n8074400\n\n\n34\n2022.10\n11198700\n\n\n35\n2022.11\n11798500\n\n\n36\n2022.12\n8723200"
  },
  {
    "objectID": "posts/1010_Regression.html#model",
    "href": "posts/1010_Regression.html#model",
    "title": "회귀분석",
    "section": "model",
    "text": "model\n\nmodel &lt;- lm(market ~ t, data = data)\nmodel %&gt;% summary\n\n\nCall:\nlm(formula = market ~ t, data = data)\n\nResiduals:\n     Min       1Q   Median       3Q      Max \n-3859553 -1315301   -70334  1707873  2962448 \n\nCoefficients:\n            Estimate Std. Error t value Pr(&gt;|t|)    \n(Intercept)  5879738     634908   9.261 8.03e-11 ***\nt              84466      29924   2.823   0.0079 ** \n---\nSignif. codes:  0 '***' 0.001 '**' 0.01 '*' 0.05 '.' 0.1 ' ' 1\n\nResidual standard error: 1865000 on 34 degrees of freedom\nMultiple R-squared:  0.1898,    Adjusted R-squared:  0.166 \nF-statistic: 7.967 on 1 and 34 DF,  p-value: 0.007902"
  },
  {
    "objectID": "posts/1010_Regression.html#formula",
    "href": "posts/1010_Regression.html#formula",
    "title": "회귀분석",
    "section": "formula",
    "text": "formula\ny = 5879738 + 84466 * t\np-value 가 0.007902로 0.05보다 작으므로 유의하다고 볼 수 있다.\nR-squared 값이 0.1898로 설명력이 낮다고 볼 수 있다."
  },
  {
    "objectID": "posts/1010_Regression.html#plot",
    "href": "posts/1010_Regression.html#plot",
    "title": "회귀분석",
    "section": "plot",
    "text": "plot\n\nggplot(data, aes(x=t, y=market)) +\n  geom_point() +\n  geom_smooth(method='lm', se=FALSE)+\n  labs(title = \"Linear Regression of market ~ t\", subtitle = \"y = 5879738 + 84466 * t\")+\n  theme_minimal()\n\n`geom_smooth()` using formula = 'y ~ x'"
  },
  {
    "objectID": "posts/1010_Regression.html#prediction",
    "href": "posts/1010_Regression.html#prediction",
    "title": "회귀분석",
    "section": "Prediction",
    "text": "Prediction\n\n# 회귀식을 함수로 정의\nlinear_regression &lt;- function(t) {\n  y &lt;- 5879738 + 84466 * t\n  return(y)\n}\n\npred_t &lt;- c(37:48)\npred_yymm &lt;- c(\"2023.01\",\"2023.02\",\"2023.03\",\"2023.04\",\"2023.05\",\"2023.06\",\"2023.07\",\"2023.08\",\"2023.09\",\"2023.10\",\"2023.11\",\"2023.12\")\npred_market &lt;- linear_regression(pred_t)\n\ndata.frame(pred_t,pred_yymm,pred_market)\n\n   pred_t pred_yymm pred_market\n1      37   2023.01     9004980\n2      38   2023.02     9089446\n3      39   2023.03     9173912\n4      40   2023.04     9258378\n5      41   2023.05     9342844\n6      42   2023.06     9427310\n7      43   2023.07     9511776\n8      44   2023.08     9596242\n9      45   2023.09     9680708\n10     46   2023.10     9765174\n11     47   2023.11     9849640\n12     48   2023.12     9934106"
  },
  {
    "objectID": "playground.html",
    "href": "playground.html",
    "title": "지시함수",
    "section": "",
    "text": "data &lt;- readxl::read_xlsx(\"posts/contents/2. 예측수준의 결정.xlsx\",sheet = 1)\n\ndata$month &lt;- substr(data$yymm,6,8)\n\ndata$quarter &lt;- ifelse(substr(data$yymm,6,8) %in% \n                         c(\"01\", \"02\", \"03\"), \"Q1\",\n                     ifelse(substr(data$yymm,6,8) %in% \n                              c(\"04\", \"05\", \"06\"), \"Q2\",\n                            ifelse(substr(data$yymm,6,8) %in% \n                                     c(\"07\", \"08\", \"09\"), \"Q3\", \"Q4\")))\n\ndata %&gt;% kable()\n\n\n\n\nt\nyymm\nmarket\nmonth\nquarter\n\n\n\n\n1\n2020.01\n5238500\n01\nQ1\n\n\n2\n2020.02\n4775400\n02\nQ1\n\n\n3\n2020.03\n5916100\n03\nQ1\n\n\n4\n2020.04\n7929800\n04\nQ2\n\n\n5\n2020.05\n8008500\n05\nQ2\n\n\n6\n2020.06\n6293300\n06\nQ2\n\n\n7\n2020.07\n4182700\n07\nQ3\n\n\n8\n2020.08\n4118900\n08\nQ3\n\n\n9\n2020.09\n6592500\n09\nQ3\n\n\n10\n2020.10\n8618600\n10\nQ4\n\n\n11\n2020.11\n8767400\n11\nQ4\n\n\n12\n2020.12\n7748900\n12\nQ4\n\n\n13\n2021.01\n6511500\n01\nQ1\n\n\n14\n2021.02\n5523400\n02\nQ1\n\n\n15\n2021.03\n7364600\n03\nQ1\n\n\n16\n2021.04\n8607400\n04\nQ2\n\n\n17\n2021.05\n9470900\n05\nQ2\n\n\n18\n2021.06\n7742000\n06\nQ2\n\n\n19\n2021.07\n5285500\n07\nQ3\n\n\n20\n2021.08\n5240300\n08\nQ3\n\n\n21\n2021.09\n8001100\n09\nQ3\n\n\n22\n2021.10\n10318600\n10\nQ4\n\n\n23\n2021.11\n10330500\n11\nQ4\n\n\n24\n2021.12\n8428700\n12\nQ4\n\n\n25\n2022.01\n6550000\n01\nQ1\n\n\n26\n2022.02\n5592500\n02\nQ1\n\n\n27\n2022.03\n7171100\n03\nQ1\n\n\n28\n2022.04\n11005000\n04\nQ2\n\n\n29\n2022.05\n8824600\n05\nQ2\n\n\n30\n2022.06\n8025300\n06\nQ2\n\n\n31\n2022.07\n5223500\n07\nQ3\n\n\n32\n2022.08\n4723100\n08\nQ3\n\n\n33\n2022.09\n8074400\n09\nQ3\n\n\n34\n2022.10\n11198700\n10\nQ4\n\n\n35\n2022.11\n11798500\n11\nQ4\n\n\n36\n2022.12\n8723200\n12\nQ4"
  },
  {
    "objectID": "playground.html#data",
    "href": "playground.html#data",
    "title": "지시함수",
    "section": "",
    "text": "data &lt;- readxl::read_xlsx(\"posts/contents/2. 예측수준의 결정.xlsx\",sheet = 1)\n\ndata$month &lt;- substr(data$yymm,6,8)\n\ndata$quarter &lt;- ifelse(substr(data$yymm,6,8) %in% \n                         c(\"01\", \"02\", \"03\"), \"Q1\",\n                     ifelse(substr(data$yymm,6,8) %in% \n                              c(\"04\", \"05\", \"06\"), \"Q2\",\n                            ifelse(substr(data$yymm,6,8) %in% \n                                     c(\"07\", \"08\", \"09\"), \"Q3\", \"Q4\")))\n\ndata %&gt;% kable()\n\n\n\n\nt\nyymm\nmarket\nmonth\nquarter\n\n\n\n\n1\n2020.01\n5238500\n01\nQ1\n\n\n2\n2020.02\n4775400\n02\nQ1\n\n\n3\n2020.03\n5916100\n03\nQ1\n\n\n4\n2020.04\n7929800\n04\nQ2\n\n\n5\n2020.05\n8008500\n05\nQ2\n\n\n6\n2020.06\n6293300\n06\nQ2\n\n\n7\n2020.07\n4182700\n07\nQ3\n\n\n8\n2020.08\n4118900\n08\nQ3\n\n\n9\n2020.09\n6592500\n09\nQ3\n\n\n10\n2020.10\n8618600\n10\nQ4\n\n\n11\n2020.11\n8767400\n11\nQ4\n\n\n12\n2020.12\n7748900\n12\nQ4\n\n\n13\n2021.01\n6511500\n01\nQ1\n\n\n14\n2021.02\n5523400\n02\nQ1\n\n\n15\n2021.03\n7364600\n03\nQ1\n\n\n16\n2021.04\n8607400\n04\nQ2\n\n\n17\n2021.05\n9470900\n05\nQ2\n\n\n18\n2021.06\n7742000\n06\nQ2\n\n\n19\n2021.07\n5285500\n07\nQ3\n\n\n20\n2021.08\n5240300\n08\nQ3\n\n\n21\n2021.09\n8001100\n09\nQ3\n\n\n22\n2021.10\n10318600\n10\nQ4\n\n\n23\n2021.11\n10330500\n11\nQ4\n\n\n24\n2021.12\n8428700\n12\nQ4\n\n\n25\n2022.01\n6550000\n01\nQ1\n\n\n26\n2022.02\n5592500\n02\nQ1\n\n\n27\n2022.03\n7171100\n03\nQ1\n\n\n28\n2022.04\n11005000\n04\nQ2\n\n\n29\n2022.05\n8824600\n05\nQ2\n\n\n30\n2022.06\n8025300\n06\nQ2\n\n\n31\n2022.07\n5223500\n07\nQ3\n\n\n32\n2022.08\n4723100\n08\nQ3\n\n\n33\n2022.09\n8074400\n09\nQ3\n\n\n34\n2022.10\n11198700\n10\nQ4\n\n\n35\n2022.11\n11798500\n11\nQ4\n\n\n36\n2022.12\n8723200\n12\nQ4"
  },
  {
    "objectID": "playground.html#월별",
    "href": "playground.html#월별",
    "title": "지시함수",
    "section": "월별",
    "text": "월별\n\nSummary\n\nmodel &lt;- lm(market ~ t+factor(month), data = data)\nmodel %&gt;% summary\n\n\nCall:\nlm(formula = market ~ t + factor(month), data = data)\n\nResiduals:\n    Min      1Q  Median      3Q     Max \n-751429 -374312   26085  377139 1044296 \n\nCoefficients:\n                Estimate Std. Error t value Pr(&gt;|t|)    \n(Intercept)      5255032     353306  14.874 2.73e-13 ***\nt                  64998       9721   6.686 8.04e-07 ***\nfactor(month)02  -867898     466697  -1.860 0.075772 .  \nfactor(month)03   587272     467000   1.258 0.221177    \nfactor(month)04  2885741     467506   6.173 2.69e-06 ***\nfactor(month)05  2408010     468213   5.143 3.27e-05 ***\nfactor(month)06   928546     469120   1.979 0.059870 .  \nfactor(month)07 -1592752     470226  -3.387 0.002536 ** \nfactor(month)08 -1860883     471531  -3.946 0.000642 ***\nfactor(month)09   936019     473031   1.979 0.059938 .  \nfactor(month)10  3360322     474726   7.078 3.28e-07 ***\nfactor(month)11  3548824     476614   7.446 1.44e-07 ***\nfactor(month)12  1485293     478691   3.103 0.005014 ** \n---\nSignif. codes:  0 '***' 0.001 '**' 0.01 '*' 0.05 '.' 0.1 ' ' 1\n\nResidual standard error: 571500 on 23 degrees of freedom\nMultiple R-squared:  0.9486,    Adjusted R-squared:  0.9217 \nF-statistic: 35.34 on 12 and 23 DF,  p-value: 6.202e-12\n\n\np-value 가 6.202e-12로 0.05보다 작으므로 유의하다고 볼 수 있다.\nR-squared 값이 0.9486로 설명력이 높다고 볼 수 있다.\n\nggplot(data, aes(x = t, y = market, color = month)) +\n  geom_point() +    \n  geom_smooth(method = \"lm\", se = FALSE) +  \n  labs(title = \"\", x = \"t\", y = \"market\") +\n  theme_minimal()\n\n`geom_smooth()` using formula = 'y ~ x'\n\n\n\n\n\n\n\n예측\n\nlinear_regression &lt;- function(t) {\n  y &lt;- 5255032 + 64998  * t\n  return(y)\n}\n\npred_t &lt;- c(37:48)\npred_yymm &lt;- c(\"2023.01\",\"2023.02\",\"2023.03\"\n               ,\"2023.04\",\"2023.05\",\"2023.06\"\n               ,\"2023.07\",\"2023.08\",\"2023.09\"\n               ,\"2023.10\",\"2023.11\",\"2023.12\")\npred_market &lt;- linear_regression(pred_t)\n\ndata_pred &lt;- data.frame(pred_t,pred_yymm,pred_market)\n\nfor (i in 2:12) {\n  data_pred$pred_market[i] &lt;- data_pred$pred_market[i] + model$coefficients[i + 1]\n}\n\ndata_pred %&gt;% kable()\n\n\n\n\npred_t\npred_yymm\npred_market\n\n\n\n\n37\n2023.01\n7659958\n\n\n38\n2023.02\n6857058\n\n\n39\n2023.03\n8377226\n\n\n40\n2023.04\n10740693\n\n\n41\n2023.05\n10327960\n\n\n42\n2023.06\n8913493\n\n\n43\n2023.07\n6457194\n\n\n44\n2023.08\n6254061\n\n\n45\n2023.09\n9115961\n\n\n46\n2023.10\n11605262\n\n\n47\n2023.11\n11858762\n\n\n48\n2023.12\n9860229"
  },
  {
    "objectID": "playground.html#분기별",
    "href": "playground.html#분기별",
    "title": "지시함수",
    "section": "분기별",
    "text": "분기별\n\nmodel_2 &lt;- lm(market ~ t+factor(quarter), data = data)\nmodel_2 %&gt;% summary\n\n\nCall:\nlm(formula = market ~ t + factor(quarter), data = data)\n\nResiduals:\n     Min       1Q   Median       3Q      Max \n-1765240  -773431   -50370   795498  2220942 \n\nCoefficients:\n                  Estimate Std. Error t value Pr(&gt;|t|)    \n(Intercept)        5170133     459378  11.255 1.77e-12 ***\nt                    64380      19031   3.383 0.001958 ** \nfactor(quarter)Q2  2169493     532300   4.076 0.000296 ***\nfactor(quarter)Q3  -741959     541408  -1.370 0.180397    \nfactor(quarter)Q4  2897245     556255   5.208 1.18e-05 ***\n---\nSignif. codes:  0 '***' 0.001 '**' 0.01 '*' 0.05 '.' 0.1 ' ' 1\n\nResidual standard error: 1123000 on 31 degrees of freedom\nMultiple R-squared:  0.7324,    Adjusted R-squared:  0.6979 \nF-statistic: 21.21 on 4 and 31 DF,  p-value: 1.653e-08\n\n\n1분기\ny = 5170133 + 64380x\n2분기\ny = 5170133 + 64380x + 2169493\n3분기\ny = 5170133 + 64380x - 741959\n4분기\ny = 5170133 + 64380x + 2897245\n\nggplot(data, aes(x = t, y = market, color = quarter)) +\n  geom_point() +    \n  geom_smooth(method = \"lm\", se = FALSE) +  \n  labs(title = \"\", x = \"t\", y = \"market\") +\n  theme_minimal()\n\n`geom_smooth()` using formula = 'y ~ x'"
  },
  {
    "objectID": "playground.html#data-1",
    "href": "playground.html#data-1",
    "title": "지시함수",
    "section": "Data",
    "text": "Data\n\ndata &lt;- readxl::read_xlsx(\"posts/contents/2. 예측수준의 결정.xlsx\",sheet = 1)\n\ndata$month &lt;- substr(data$yymm,6,8)\ndata$year &lt;- substr(data$yymm,1,4)\n\ndata$quarter &lt;- ifelse(substr(data$yymm,6,8) %in% \n                         c(\"01\", \"02\", \"03\"), \"Q1\",\n                     ifelse(substr(data$yymm,6,8) %in% \n                              c(\"04\", \"05\", \"06\"), \"Q2\",\n                            ifelse(substr(data$yymm,6,8) %in% \n                                     c(\"07\", \"08\", \"09\"), \"Q3\", \"Q4\")))\n\ndata %&gt;% head()\n\n# A tibble: 6 × 6\n      t yymm     market month year  quarter\n  &lt;dbl&gt; &lt;chr&gt;     &lt;dbl&gt; &lt;chr&gt; &lt;chr&gt; &lt;chr&gt;  \n1     1 2020.01 5238500 01    2020  Q1     \n2     2 2020.02 4775400 02    2020  Q1     \n3     3 2020.03 5916100 03    2020  Q1     \n4     4 2020.04 7929800 04    2020  Q2     \n5     5 2020.05 8008500 05    2020  Q2     \n6     6 2020.06 6293300 06    2020  Q2     \n\n\n\nggplot(data, aes(x = t, y = market, color = year)) +\n  geom_point()+\n  geom_line()+\n  theme_minimal()\n\n\n\n\n\ndata[c(\"t\",\"market\")] %&gt;% kable()\n\n\n\n\nt\nmarket\n\n\n\n\n1\n5238500\n\n\n2\n4775400\n\n\n3\n5916100\n\n\n4\n7929800\n\n\n5\n8008500\n\n\n6\n6293300\n\n\n7\n4182700\n\n\n8\n4118900\n\n\n9\n6592500\n\n\n10\n8618600\n\n\n11\n8767400\n\n\n12\n7748900\n\n\n13\n6511500\n\n\n14\n5523400\n\n\n15\n7364600\n\n\n16\n8607400\n\n\n17\n9470900\n\n\n18\n7742000\n\n\n19\n5285500\n\n\n20\n5240300\n\n\n21\n8001100\n\n\n22\n10318600\n\n\n23\n10330500\n\n\n24\n8428700\n\n\n25\n6550000\n\n\n26\n5592500\n\n\n27\n7171100\n\n\n28\n11005000\n\n\n29\n8824600\n\n\n30\n8025300\n\n\n31\n5223500\n\n\n32\n4723100\n\n\n33\n8074400\n\n\n34\n11198700\n\n\n35\n11798500\n\n\n36\n8723200\n\n\n\n\n\n\n# Your data\nt &lt;- 1:36\nmarket &lt;- c(\n  5238500, 4775400, 5916100, 7929800, 8008500, 6293300, 4182700, 4118900,\n  6592500, 8618600, 8767400, 7748900, 6511500, 5523400, 7364600, 8607400,\n  9470900, 7742000, 5285500, 5240300, 8001100, 10318600, 10330500, 8428700,\n  6550000, 5592500, 7171100, 11005000, 8824600, 8025300, 5223500, 4723100,\n  8074400, 11198700, 11798500, 8723200\n)\n\n# Create a data frame\ndata &lt;- data.frame(t, market)\n\nlibrary(rpart)\nlibrary(rpart.plot)\n\n# Fit a decision tree model with control parameters\ncontrol_params &lt;- rpart.control(minsplit = 5, minbucket = 5)  # Adjust these values as needed\ntree_model &lt;- rpart(market ~ t, data = data, control = control_params)\n\n# Visualize the decision tree\nlibrary(rpart.plot)\nrpart.plot(tree_model, type = 4, extra = 101, under = TRUE, tweak = 1.2)\n\n\n\n\n\nplot(data$market,predict(tree_model,data.frame(t)))\n\n\n\n\n\n# Load the required packages\nlibrary(rpart)\nlibrary(rpart.plot)\nlibrary(ggplot2)\n\n# Your data\nt &lt;- 1:36\nmarket &lt;- c(\n  5238500, 4775400, 5916100, 7929800, 8008500, 6293300, 4182700, 4118900,\n  6592500, 8618600, 8767400, 7748900, 6511500, 5523400, 7364600, 8607400,\n  9470900, 7742000, 5285500, 5240300, 8001100, 10318600, 10330500, 8428700,\n  6550000, 5592500, 7171100, 11005000, 8824600, 8025300, 5223500, 4723100,\n  8074400, 11198700, 11798500, 8723200\n)\n\n# Create a data frame\ndata &lt;- data.frame(t, market)\n\n# Fit a decision tree model\ntree_model &lt;- rpart(market ~ t, data = data)\n\n# Create a scatter plot\nscatter_plot &lt;- ggplot(data, aes(x = t, y = market)) +\n  geom_point() +  # Scatter plot\n  geom_smooth(method = \"lm\", se = FALSE, color = \"blue\", formula = y ~ x) +  # Linear regression line\n  geom_smooth(data = data.frame(t = t, market = predict(tree_model)), method = \"lm\", se = FALSE, color = \"red\", formula = y ~ x) +  # Decision tree model line\n  labs(title = \"Scatter Plot with Decision Tree Regression Line\", x = \"t\", y = \"market\")\n\n# Print the plot\nprint(scatter_plot)"
  },
  {
    "objectID": "posts/1012_Indicator_Regression.html",
    "href": "posts/1012_Indicator_Regression.html",
    "title": "지시함수",
    "section": "",
    "text": "data &lt;- readxl::read_xlsx(\"contents/2. 예측수준의 결정.xlsx\",sheet = 1)\n\ndata$month &lt;- substr(data$yymm,6,8)\n\ndata$quarter &lt;- ifelse(substr(data$yymm,6,8) %in% \n                         c(\"01\", \"02\", \"03\"), \"Q1\",\n                     ifelse(substr(data$yymm,6,8) %in% \n                              c(\"04\", \"05\", \"06\"), \"Q2\",\n                            ifelse(substr(data$yymm,6,8) %in% \n                                     c(\"07\", \"08\", \"09\"), \"Q3\", \"Q4\")))\n\ndata %&gt;% kable()\n\n\n\n\nt\nyymm\nmarket\nmonth\nquarter\n\n\n\n\n1\n2020.01\n5238500\n01\nQ1\n\n\n2\n2020.02\n4775400\n02\nQ1\n\n\n3\n2020.03\n5916100\n03\nQ1\n\n\n4\n2020.04\n7929800\n04\nQ2\n\n\n5\n2020.05\n8008500\n05\nQ2\n\n\n6\n2020.06\n6293300\n06\nQ2\n\n\n7\n2020.07\n4182700\n07\nQ3\n\n\n8\n2020.08\n4118900\n08\nQ3\n\n\n9\n2020.09\n6592500\n09\nQ3\n\n\n10\n2020.10\n8618600\n10\nQ4\n\n\n11\n2020.11\n8767400\n11\nQ4\n\n\n12\n2020.12\n7748900\n12\nQ4\n\n\n13\n2021.01\n6511500\n01\nQ1\n\n\n14\n2021.02\n5523400\n02\nQ1\n\n\n15\n2021.03\n7364600\n03\nQ1\n\n\n16\n2021.04\n8607400\n04\nQ2\n\n\n17\n2021.05\n9470900\n05\nQ2\n\n\n18\n2021.06\n7742000\n06\nQ2\n\n\n19\n2021.07\n5285500\n07\nQ3\n\n\n20\n2021.08\n5240300\n08\nQ3\n\n\n21\n2021.09\n8001100\n09\nQ3\n\n\n22\n2021.10\n10318600\n10\nQ4\n\n\n23\n2021.11\n10330500\n11\nQ4\n\n\n24\n2021.12\n8428700\n12\nQ4\n\n\n25\n2022.01\n6550000\n01\nQ1\n\n\n26\n2022.02\n5592500\n02\nQ1\n\n\n27\n2022.03\n7171100\n03\nQ1\n\n\n28\n2022.04\n11005000\n04\nQ2\n\n\n29\n2022.05\n8824600\n05\nQ2\n\n\n30\n2022.06\n8025300\n06\nQ2\n\n\n31\n2022.07\n5223500\n07\nQ3\n\n\n32\n2022.08\n4723100\n08\nQ3\n\n\n33\n2022.09\n8074400\n09\nQ3\n\n\n34\n2022.10\n11198700\n10\nQ4\n\n\n35\n2022.11\n11798500\n11\nQ4\n\n\n36\n2022.12\n8723200\n12\nQ4"
  },
  {
    "objectID": "posts/1012_Indicator_Regression.html#data",
    "href": "posts/1012_Indicator_Regression.html#data",
    "title": "지시함수",
    "section": "",
    "text": "data &lt;- readxl::read_xlsx(\"contents/2. 예측수준의 결정.xlsx\",sheet = 1)\n\ndata$month &lt;- substr(data$yymm,6,8)\n\ndata$quarter &lt;- ifelse(substr(data$yymm,6,8) %in% \n                         c(\"01\", \"02\", \"03\"), \"Q1\",\n                     ifelse(substr(data$yymm,6,8) %in% \n                              c(\"04\", \"05\", \"06\"), \"Q2\",\n                            ifelse(substr(data$yymm,6,8) %in% \n                                     c(\"07\", \"08\", \"09\"), \"Q3\", \"Q4\")))\n\ndata %&gt;% kable()\n\n\n\n\nt\nyymm\nmarket\nmonth\nquarter\n\n\n\n\n1\n2020.01\n5238500\n01\nQ1\n\n\n2\n2020.02\n4775400\n02\nQ1\n\n\n3\n2020.03\n5916100\n03\nQ1\n\n\n4\n2020.04\n7929800\n04\nQ2\n\n\n5\n2020.05\n8008500\n05\nQ2\n\n\n6\n2020.06\n6293300\n06\nQ2\n\n\n7\n2020.07\n4182700\n07\nQ3\n\n\n8\n2020.08\n4118900\n08\nQ3\n\n\n9\n2020.09\n6592500\n09\nQ3\n\n\n10\n2020.10\n8618600\n10\nQ4\n\n\n11\n2020.11\n8767400\n11\nQ4\n\n\n12\n2020.12\n7748900\n12\nQ4\n\n\n13\n2021.01\n6511500\n01\nQ1\n\n\n14\n2021.02\n5523400\n02\nQ1\n\n\n15\n2021.03\n7364600\n03\nQ1\n\n\n16\n2021.04\n8607400\n04\nQ2\n\n\n17\n2021.05\n9470900\n05\nQ2\n\n\n18\n2021.06\n7742000\n06\nQ2\n\n\n19\n2021.07\n5285500\n07\nQ3\n\n\n20\n2021.08\n5240300\n08\nQ3\n\n\n21\n2021.09\n8001100\n09\nQ3\n\n\n22\n2021.10\n10318600\n10\nQ4\n\n\n23\n2021.11\n10330500\n11\nQ4\n\n\n24\n2021.12\n8428700\n12\nQ4\n\n\n25\n2022.01\n6550000\n01\nQ1\n\n\n26\n2022.02\n5592500\n02\nQ1\n\n\n27\n2022.03\n7171100\n03\nQ1\n\n\n28\n2022.04\n11005000\n04\nQ2\n\n\n29\n2022.05\n8824600\n05\nQ2\n\n\n30\n2022.06\n8025300\n06\nQ2\n\n\n31\n2022.07\n5223500\n07\nQ3\n\n\n32\n2022.08\n4723100\n08\nQ3\n\n\n33\n2022.09\n8074400\n09\nQ3\n\n\n34\n2022.10\n11198700\n10\nQ4\n\n\n35\n2022.11\n11798500\n11\nQ4\n\n\n36\n2022.12\n8723200\n12\nQ4"
  },
  {
    "objectID": "posts/1012_Indicator_Regression.html#월별",
    "href": "posts/1012_Indicator_Regression.html#월별",
    "title": "지시함수",
    "section": "월별",
    "text": "월별\n\nSummary\n\nmodel &lt;- lm(market ~ t+factor(month), data = data)\nmodel %&gt;% summary\n\n\nCall:\nlm(formula = market ~ t + factor(month), data = data)\n\nResiduals:\n    Min      1Q  Median      3Q     Max \n-751429 -374312   26085  377139 1044296 \n\nCoefficients:\n                Estimate Std. Error t value Pr(&gt;|t|)    \n(Intercept)      5255032     353306  14.874 2.73e-13 ***\nt                  64998       9721   6.686 8.04e-07 ***\nfactor(month)02  -867898     466697  -1.860 0.075772 .  \nfactor(month)03   587272     467000   1.258 0.221177    \nfactor(month)04  2885741     467506   6.173 2.69e-06 ***\nfactor(month)05  2408010     468213   5.143 3.27e-05 ***\nfactor(month)06   928546     469120   1.979 0.059870 .  \nfactor(month)07 -1592752     470226  -3.387 0.002536 ** \nfactor(month)08 -1860883     471531  -3.946 0.000642 ***\nfactor(month)09   936019     473031   1.979 0.059938 .  \nfactor(month)10  3360322     474726   7.078 3.28e-07 ***\nfactor(month)11  3548824     476614   7.446 1.44e-07 ***\nfactor(month)12  1485293     478691   3.103 0.005014 ** \n---\nSignif. codes:  0 '***' 0.001 '**' 0.01 '*' 0.05 '.' 0.1 ' ' 1\n\nResidual standard error: 571500 on 23 degrees of freedom\nMultiple R-squared:  0.9486,    Adjusted R-squared:  0.9217 \nF-statistic: 35.34 on 12 and 23 DF,  p-value: 6.202e-12\n\n\np-value 가 6.202e-12로 0.05보다 작으므로 유의하다고 볼 수 있다.\nR-squared 값이 0.9486로 설명력이 높다고 볼 수 있다.\n\nggplot(data, aes(x = t, y = market, color = month)) +\n  geom_point() +    \n  geom_smooth(method = \"lm\", se = FALSE) +  \n  labs(title = \"\", x = \"t\", y = \"market\") +\n  theme_minimal()\n\n`geom_smooth()` using formula = 'y ~ x'\n\n\n\n\n\n\ndata %&gt;% hchart(\"scatter\", hcaes(x=t,y=market,group = month),\n                regression = TRUE,\n                regressionSettings = list(\n    type = \"linear\",\n    lineWidth = 2,\n    name = \"%eq\",\n    hideInLegend = FALSE)\n  ) %&gt;% \n  hc_add_dependency(\"plugins/highcharts-regression.js\") %&gt;% \n  hc_legend()\n\n\n\n\n\n\n\n\n예측\n\nlinear_regression &lt;- function(t) {\n  y &lt;- 5255032 + 64998  * t\n  return(y)\n}\n\npred_t &lt;- c(37:48)\npred_yymm &lt;- c(\"2023.01\",\"2023.02\",\"2023.03\"\n               ,\"2023.04\",\"2023.05\",\"2023.06\"\n               ,\"2023.07\",\"2023.08\",\"2023.09\"\n               ,\"2023.10\",\"2023.11\",\"2023.12\")\npred_market &lt;- linear_regression(pred_t)\n\ndata_pred &lt;- data.frame(pred_t,pred_yymm,pred_market)\n\nfor (i in 2:12) {\n  data_pred$pred_market[i] &lt;- data_pred$pred_market[i] + model$coefficients[i + 1]\n}\n\ndata_pred %&gt;% kable()\n\n\n\n\npred_t\npred_yymm\npred_market\n\n\n\n\n37\n2023.01\n7659958\n\n\n38\n2023.02\n6857058\n\n\n39\n2023.03\n8377226\n\n\n40\n2023.04\n10740693\n\n\n41\n2023.05\n10327960\n\n\n42\n2023.06\n8913493\n\n\n43\n2023.07\n6457194\n\n\n44\n2023.08\n6254061\n\n\n45\n2023.09\n9115961\n\n\n46\n2023.10\n11605262\n\n\n47\n2023.11\n11858762\n\n\n48\n2023.12\n9860229"
  },
  {
    "objectID": "posts/1012_Indicator_Regression.html#분기별",
    "href": "posts/1012_Indicator_Regression.html#분기별",
    "title": "지시함수",
    "section": "분기별",
    "text": "분기별\n\nmodel_2 &lt;- lm(market ~ t+factor(quarter), data = data)\nmodel_2 %&gt;% summary\n\n\nCall:\nlm(formula = market ~ t + factor(quarter), data = data)\n\nResiduals:\n     Min       1Q   Median       3Q      Max \n-1765240  -773431   -50370   795498  2220942 \n\nCoefficients:\n                  Estimate Std. Error t value Pr(&gt;|t|)    \n(Intercept)        5170133     459378  11.255 1.77e-12 ***\nt                    64380      19031   3.383 0.001958 ** \nfactor(quarter)Q2  2169493     532300   4.076 0.000296 ***\nfactor(quarter)Q3  -741959     541408  -1.370 0.180397    \nfactor(quarter)Q4  2897245     556255   5.208 1.18e-05 ***\n---\nSignif. codes:  0 '***' 0.001 '**' 0.01 '*' 0.05 '.' 0.1 ' ' 1\n\nResidual standard error: 1123000 on 31 degrees of freedom\nMultiple R-squared:  0.7324,    Adjusted R-squared:  0.6979 \nF-statistic: 21.21 on 4 and 31 DF,  p-value: 1.653e-08\n\n\n1분기\ny = 5170133 + 64380x\n2분기\ny = 5170133 + 64380x + 2169493\n3분기\ny = 5170133 + 64380x - 741959\n4분기\ny = 5170133 + 64380x + 2897245\n\nggplot(data, aes(x = t, y = market, color = quarter)) +\n  geom_point() +    \n  geom_smooth(method = \"lm\", se = FALSE) +  \n  labs(title = \"\", x = \"t\", y = \"market\") +\n  theme_minimal()\n\n`geom_smooth()` using formula = 'y ~ x'\n\n\n\n\n\n\ndata %&gt;% hchart(\"scatter\", hcaes(x=t,y=market,group = quarter),\n                regression = TRUE,\n                regressionSettings = list(\n    type = \"linear\",\n    lineWidth = 2,\n    name = \"%eq\",\n    hideInLegend = FALSE)\n  ) %&gt;% \n  hc_add_dependency(\"plugins/highcharts-regression.js\") %&gt;% \n  hc_legend()"
  },
  {
    "objectID": "posts/0914.html",
    "href": "posts/0914.html",
    "title": "빈도와 심도",
    "section": "",
    "text": "대인손해 빈도 0.021832498210451\n대물손해 빈도 0.0626342161775233\n자손     빈도 0.00536864710093057\n자차손해 빈도 0.284180386542591\n\n대인손해액 심도 4575576.06557377\n대물손해액 심도 1283375.08571429\n자손액     심도 1033460\n자차손해액 심도 909640.365239295\n\n\n\n\n\n담보\n빈도\n\n\n\n\n대인손해\n0.021832498210451\n\n\n대물손해\n0.0626342161775233\n\n\n자손\n0.00536864710093057\n\n\n자차손해\n0.284180386542591\n\n\n\n\n\n\n담보\n심도\n\n\n\n\n대인손해액\n4575576.06557377\n\n\n대물손해액\n1283375.08571429\n\n\n자손액\n1033460\n\n\n자차손해액\n909640.365239295"
  },
  {
    "objectID": "posts/0914.html#정리",
    "href": "posts/0914.html#정리",
    "title": "빈도와 심도",
    "section": "",
    "text": "대인손해 빈도 0.021832498210451\n대물손해 빈도 0.0626342161775233\n자손     빈도 0.00536864710093057\n자차손해 빈도 0.284180386542591\n\n대인손해액 심도 4575576.06557377\n대물손해액 심도 1283375.08571429\n자손액     심도 1033460\n자차손해액 심도 909640.365239295\n\n\n\n\n\n담보\n빈도\n\n\n\n\n대인손해\n0.021832498210451\n\n\n대물손해\n0.0626342161775233\n\n\n자손\n0.00536864710093057\n\n\n자차손해\n0.284180386542591\n\n\n\n\n\n\n담보\n심도\n\n\n\n\n대인손해액\n4575576.06557377\n\n\n대물손해액\n1283375.08571429\n\n\n자손액\n1033460\n\n\n자차손해액\n909640.365239295"
  },
  {
    "objectID": "posts/0914.html#대인-손해액-빈도심도",
    "href": "posts/0914.html#대인-손해액-빈도심도",
    "title": "빈도와 심도",
    "section": "대인 손해액 빈도&심도",
    "text": "대인 손해액 빈도&심도\n\n#빈도\nnrow(filter(data,in1_los!=0))/nrow(data)\n\n[1] 0.0218325\n\n\n\n#심도\nsum(data$in1_los)/nrow(filter(data,in1_los!=0))\n\n[1] 4575576"
  },
  {
    "objectID": "posts/0914.html#대물-손해액-빈도심도",
    "href": "posts/0914.html#대물-손해액-빈도심도",
    "title": "빈도와 심도",
    "section": "대물 손해액 빈도&심도",
    "text": "대물 손해액 빈도&심도\n\n#빈도\nnrow(filter(data,mul_los!=0))/nrow(data)\n\n[1] 0.06263422\n\n\n\n#심도\nsum(data$mul_los)/nrow(filter(data,mul_los!=0))\n\n[1] 1283375"
  },
  {
    "objectID": "posts/0914.html#자손-빈도심도",
    "href": "posts/0914.html#자손-빈도심도",
    "title": "빈도와 심도",
    "section": "자손 빈도&심도",
    "text": "자손 빈도&심도\n\n#빈도\nnrow(filter(data,jas_los!=0))/nrow(data)\n\n[1] 0.005368647\n\n\n\n#심도\nsum(data$jas_los)/nrow(filter(data,jas_los!=0))\n\n[1] 1033460"
  },
  {
    "objectID": "posts/0914.html#자차-손해액-빈도심도",
    "href": "posts/0914.html#자차-손해액-빈도심도",
    "title": "빈도와 심도",
    "section": "자차 손해액 빈도&심도",
    "text": "자차 손해액 빈도&심도\n\n#빈도\nnrow(filter(data,cha_los!=0))/nrow(data)\n\n[1] 0.2841804\n\n\n\n#심도\nsum(data$cha_los)/nrow(filter(data,cha_los!=0))\n\n[1] 909640.4\n\n\n\ndata$AGE_CAT &lt;- paste(substr(data$PIB_AGE,1,1),\"0대\",sep=\"\")"
  },
  {
    "objectID": "posts/1024_.html",
    "href": "posts/1024_.html",
    "title": "빈도, 심도 선형회귀",
    "section": "",
    "text": "data_bin &lt;- readxl::read_xlsx(\"contents/2. 예측수준의 결정.xlsx\",sheet = 2)\ndata_sim &lt;- readxl::read_xlsx(\"contents/2. 예측수준의 결정.xlsx\",sheet = 3)\n\ndata_bin %&gt;% head()\n\n# A tibble: 6 × 7\n      t  year  quat in1_bin mul_bin jas_bin cha_bin\n  &lt;dbl&gt; &lt;dbl&gt; &lt;dbl&gt;   &lt;dbl&gt;   &lt;dbl&gt;   &lt;dbl&gt;   &lt;dbl&gt;\n1     1  2016     1    5.71    8.42    0.95    15.8\n2     2  2016     2    6.16    8.2     0.75    14.6\n3     3  2016     3    6.54    8.73    0.78    15.4\n4     4  2016     4    6.64    9.01    0.87    15.4\n5     5  2017     1    5.88    9.06    1.05    16.7\n6     6  2017     2    6.02    8.41    0.61    14.0"
  },
  {
    "objectID": "posts/1024_.html#data",
    "href": "posts/1024_.html#data",
    "title": "빈도, 심도 선형회귀",
    "section": "",
    "text": "data_bin &lt;- readxl::read_xlsx(\"contents/2. 예측수준의 결정.xlsx\",sheet = 2)\ndata_sim &lt;- readxl::read_xlsx(\"contents/2. 예측수준의 결정.xlsx\",sheet = 3)\n\ndata_bin %&gt;% head()\n\n# A tibble: 6 × 7\n      t  year  quat in1_bin mul_bin jas_bin cha_bin\n  &lt;dbl&gt; &lt;dbl&gt; &lt;dbl&gt;   &lt;dbl&gt;   &lt;dbl&gt;   &lt;dbl&gt;   &lt;dbl&gt;\n1     1  2016     1    5.71    8.42    0.95    15.8\n2     2  2016     2    6.16    8.2     0.75    14.6\n3     3  2016     3    6.54    8.73    0.78    15.4\n4     4  2016     4    6.64    9.01    0.87    15.4\n5     5  2017     1    5.88    9.06    1.05    16.7\n6     6  2017     2    6.02    8.41    0.61    14.0"
  },
  {
    "objectID": "posts/1024_.html#분기별-r-squared",
    "href": "posts/1024_.html#분기별-r-squared",
    "title": "빈도, 심도 선형회귀",
    "section": "분기별 R-squared",
    "text": "분기별 R-squared\n\nlin_reg &lt;- function(x){\n  rsq &lt;- summary(lm(x ~ t + factor(quat), data = data_bin))$r.squared\n  print(rsq)\n}\n\nlin_reg(data_bin$in1_bin)\n\n[1] 0.9055443\n\nlin_reg(data_bin$mul_bin)\n\n[1] 0.9156786\n\nlin_reg(data_bin$jas_bin)\n\n[1] 0.4214575\n\nlin_reg(data_bin$cha_bin)\n\n[1] 0.7271797\n\nlin_reg_2 &lt;- function(x){\n  rsq &lt;- summary(lm(x ~ t + factor(quat), data = data_sim))$r.squared\n  print(rsq)\n}\n\nlin_reg(data_sim$in1_sim)\n\n[1] 0.8562366\n\nlin_reg(data_sim$mul_sim)\n\n[1] 0.8859307\n\nlin_reg(data_sim$jas_sim)\n\n[1] 0.7132966\n\nlin_reg(data_sim$cha_sim)\n\n[1] 0.8723479"
  },
  {
    "objectID": "posts/1024_.html#t-r-squared",
    "href": "posts/1024_.html#t-r-squared",
    "title": "빈도, 심도 선형회귀",
    "section": "t R-squared",
    "text": "t R-squared\n\nlin_reg &lt;- function(x){\n  rsq &lt;- summary(lm(x ~ t, data = data_bin))$r.squared\n  print(rsq)\n}\n\nlin_reg(data_bin$in1_bin)\n\n[1] 0.7933428\n\nlin_reg(data_bin$mul_bin)\n\n[1] 0.8433206\n\nlin_reg(data_bin$jas_bin)\n\n[1] 0.03399262\n\nlin_reg(data_bin$cha_bin)\n\n[1] 0.6356729\n\nlin_reg_2 &lt;- function(x){\n  rsq &lt;- summary(lm(x ~ t, data = data_sim))$r.squared\n  print(rsq)\n}\n\nlin_reg(data_sim$in1_sim)\n\n[1] 0.8401208\n\nlin_reg(data_sim$mul_sim)\n\n[1] 0.878172\n\nlin_reg(data_sim$jas_sim)\n\n[1] 0.6858608\n\nlin_reg(data_sim$cha_sim)\n\n[1] 0.4869522"
  },
  {
    "objectID": "posts/1024_.html#중간고사-분포",
    "href": "posts/1024_.html#중간고사-분포",
    "title": "빈도, 심도 선형회귀",
    "section": "중간고사 분포",
    "text": "중간고사 분포\n“0 ~ 10” = 2, “10 ~ 20” = 2, “20 ~ 30” = 2, “30 ~ 40” = 2, “40 ~ 50” = 3, “50 ~ 60” = 2, “60 ~ 70” = 3,\n“70 ~ 80” = 4,\n‘80 ~ 90’ = 2"
  },
  {
    "objectID": "posts/1026_.html",
    "href": "posts/1026_.html",
    "title": "분기별 선형모형",
    "section": "",
    "text": "data_bin &lt;- readxl::read_xlsx(\"contents/2. 예측수준의 결정.xlsx\",sheet = 2)\ndata_sim &lt;- readxl::read_xlsx(\"contents/2. 예측수준의 결정.xlsx\",sheet = 3)\n\ndata_bin %&gt;% head() %&gt;% kable()\n\n\n\n\nt\nyear\nquat\nin1_bin\nmul_bin\njas_bin\ncha_bin\n\n\n\n\n1\n2016\n1\n5.71\n8.42\n0.95\n15.84\n\n\n2\n2016\n2\n6.16\n8.20\n0.75\n14.61\n\n\n3\n2016\n3\n6.54\n8.73\n0.78\n15.37\n\n\n4\n2016\n4\n6.64\n9.01\n0.87\n15.39\n\n\n5\n2017\n1\n5.88\n9.06\n1.05\n16.68\n\n\n6\n2017\n2\n6.02\n8.41\n0.61\n13.98"
  },
  {
    "objectID": "posts/1026_.html#data",
    "href": "posts/1026_.html#data",
    "title": "분기별 선형모형",
    "section": "",
    "text": "data_bin &lt;- readxl::read_xlsx(\"contents/2. 예측수준의 결정.xlsx\",sheet = 2)\ndata_sim &lt;- readxl::read_xlsx(\"contents/2. 예측수준의 결정.xlsx\",sheet = 3)\n\ndata_bin %&gt;% head() %&gt;% kable()\n\n\n\n\nt\nyear\nquat\nin1_bin\nmul_bin\njas_bin\ncha_bin\n\n\n\n\n1\n2016\n1\n5.71\n8.42\n0.95\n15.84\n\n\n2\n2016\n2\n6.16\n8.20\n0.75\n14.61\n\n\n3\n2016\n3\n6.54\n8.73\n0.78\n15.37\n\n\n4\n2016\n4\n6.64\n9.01\n0.87\n15.39\n\n\n5\n2017\n1\n5.88\n9.06\n1.05\n16.68\n\n\n6\n2017\n2\n6.02\n8.41\n0.61\n13.98"
  },
  {
    "objectID": "posts/1026_.html#분기별-선형모형",
    "href": "posts/1026_.html#분기별-선형모형",
    "title": "분기별 선형모형",
    "section": "분기별 선형모형",
    "text": "분기별 선형모형\n\nin1_bin\n\ndata_bin %&gt;% ggplot(aes(x=t, y=in1_bin, color = factor(quat)))+\n  geom_point()+\n  geom_smooth(data = data_bin,aes(x=t,y=in1_bin,color = factor(quat)),method = \"lm\",se=FALSE)+\n  theme_minimal()\n\n`geom_smooth()` using formula = 'y ~ x'\n\n\n\n\n\n\n1분기\n\\[\ny = 5.58161 + 0.08196 * t\n\\]\n\nR-squared :\n\n\n\n[1] 0.8613146\n\n\n\nadj R-squared :\n\n\n\n[1] 0.8335775\n\n\n\np-value :\n\n\n\n[1] 0.002563184\n\n\n\n\n2분기\n\\[\ny = 5.69036 + 0.08661 * t\n\\]\n\nR-squared :\n\n\n\n[1] 0.8707973\n\n\n\nadj R-squared :\n\n\n\n[1] 0.8449568\n\n\n\np-value :\n\n\n\n[1] 0.002139097\n\n\n\n\n3분기\n\\[\ny = 5.98027 + 0.09741 * t\n\\]\n\nR-squared :\n\n\n\n[1] 0.942346\n\n\n\nadj R-squared :\n\n\n\n[1] 0.9308152\n\n\n\np-value :\n\n\n\n[1] 0.0002767648\n\n\n\n\n4분기\n\\[\ny = 6.02714 + 0.9991 * t\n\\]\n\nR-squared :\n\n\n\n[1] 0.8682876\n\n\n\nadj R-squared :\n\n\n\n[1] 0.8419451\n\n\n\np-value :\n\n\n\n[1] 0.002246747\n\n\n\n\n\nmul_bin\n\ndata_bin %&gt;% ggplot(aes(x=t, y=mul_bin, color = factor(quat)))+\n  geom_point()+\n  geom_smooth(data = data_bin,aes(x=t,y=mul_bin,color = factor(quat)),method = \"lm\",se=FALSE)+\n  theme_minimal()\n\n`geom_smooth()` using formula = 'y ~ x'\n\n\n\n\n\n\n1분기\n\nR-squared :\n\n\n\n[1] 0.8688792\n\n\n\nadj R-squared :\n\n\n\n[1] 0.842655\n\n\n\np-value :\n\n\n\n[1] 0.002221077\n\n\n\n\n2분기\n\nR-squared :\n\n\n\n[1] 0.951164\n\n\n\nadj R-squared :\n\n\n\n[1] 0.9413968\n\n\n\np-value :\n\n\n\n[1] 0.0001821618\n\n\n\n\n3분기\n\nR-squared :\n\n\n\n[1] 0.984909\n\n\n\nadj R-squared :\n\n\n\n[1] 0.9818908\n\n\n\np-value :\n\n\n\n[1] 9.550536e-06\n\n\n\n\n4분기\n\nR-squared :\n\n\n\n[1] 0.8363754\n\n\n\nadj R-squared :\n\n\n\n[1] 0.8036505\n\n\n\np-value :\n\n\n\n[1] 0.00391505\n\n\n\n\n\njas_bin\n\ndata_bin %&gt;% ggplot(aes(x=t, y=jas_bin, color = factor(quat)))+\n  geom_point()+\n  geom_smooth(data = data_bin,aes(x=t,y=jas_bin,color = factor(quat)),method = \"lm\",se=FALSE)+\n  theme_minimal()\n\n`geom_smooth()` using formula = 'y ~ x'\n\n\n\n\n\n\n1분기\n\nR-squared :\n\n\n\n[1] 0.174904\n\n\n\nadj R-squared :\n\n\n\n[1] 0.009884837\n\n\n\np-value :\n\n\n\n[1] 0.3504405\n\n\n\n\n2분기\n\nR-squared :\n\n\n\n[1] 0.1524855\n\n\n\nadj R-squared :\n\n\n\n[1] -0.01701742\n\n\n\np-value :\n\n\n\n[1] 0.386442\n\n\n\n\n3분기\n\nR-squared :\n\n\n\n[1] 0.426441\n\n\n\nadj R-squared :\n\n\n\n[1] 0.3117291\n\n\n\np-value :\n\n\n\n[1] 0.1117648\n\n\n\n\n4분기\n\nR-squared :\n\n\n\n[1] 0.1458333\n\n\n\nadj R-squared :\n\n\n\n[1] -0.025\n\n\n\np-value :\n\n\n\n[1] 0.3979173\n\n\n\n\n\ncha_bin\n\ndata_bin %&gt;% ggplot(aes(x=t, y=cha_bin, color = factor(quat)))+\n  geom_point()+\n  geom_smooth(data = data_bin,aes(x=t,y=cha_bin,color = factor(quat)),method = \"lm\",se=FALSE)+\n  theme_minimal()\n\n`geom_smooth()` using formula = 'y ~ x'\n\n\n\n\n\n\n1분기\n\nR-squared :\n\n\n\n[1] 0.4764292\n\n\n\nadj R-squared :\n\n\n\n[1] 0.371715\n\n\n\np-value :\n\n\n\n[1] 0.08607355\n\n\n\n\n2분기\n\nR-squared :\n\n\n\n[1] 0.7936314\n\n\n\nadj R-squared :\n\n\n\n[1] 0.7523577\n\n\n\np-value :\n\n\n\n[1] 0.007120947\n\n\n\n\n3분기\n\nR-squared :\n\n\n\n[1] 0.7655246\n\n\n\nadj R-squared :\n\n\n\n[1] 0.7186296\n\n\n\np-value :\n\n\n\n[1] 0.009919576\n\n\n\n\n4분기\n\nR-squared :\n\n\n\n[1] 0.723205\n\n\n\nadj R-squared :\n\n\n\n[1] 0.6678459\n\n\n\np-value :\n\n\n\n[1] 0.01530935"
  },
  {
    "objectID": "posts/1031_.html",
    "href": "posts/1031_.html",
    "title": "분기별 선형모형",
    "section": "",
    "text": "data_bin &lt;- readxl::read_xlsx(\"contents/2. 예측수준의 결정.xlsx\",sheet = 2)\ndata_sim &lt;- readxl::read_xlsx(\"contents/2. 예측수준의 결정.xlsx\",sheet = 3)\n\ndata_bin %&gt;% head() %&gt;% kable()\n\n\n\n\nt\nyear\nquat\nin1_bin\nmul_bin\njas_bin\ncha_bin\n\n\n\n\n1\n2016\n1\n5.71\n8.42\n0.95\n15.84\n\n\n2\n2016\n2\n6.16\n8.20\n0.75\n14.61\n\n\n3\n2016\n3\n6.54\n8.73\n0.78\n15.37\n\n\n4\n2016\n4\n6.64\n9.01\n0.87\n15.39\n\n\n5\n2017\n1\n5.88\n9.06\n1.05\n16.68\n\n\n6\n2017\n2\n6.02\n8.41\n0.61\n13.98"
  },
  {
    "objectID": "posts/1031_.html#data",
    "href": "posts/1031_.html#data",
    "title": "분기별 선형모형",
    "section": "",
    "text": "data_bin &lt;- readxl::read_xlsx(\"contents/2. 예측수준의 결정.xlsx\",sheet = 2)\ndata_sim &lt;- readxl::read_xlsx(\"contents/2. 예측수준의 결정.xlsx\",sheet = 3)\n\ndata_bin %&gt;% head() %&gt;% kable()\n\n\n\n\nt\nyear\nquat\nin1_bin\nmul_bin\njas_bin\ncha_bin\n\n\n\n\n1\n2016\n1\n5.71\n8.42\n0.95\n15.84\n\n\n2\n2016\n2\n6.16\n8.20\n0.75\n14.61\n\n\n3\n2016\n3\n6.54\n8.73\n0.78\n15.37\n\n\n4\n2016\n4\n6.64\n9.01\n0.87\n15.39\n\n\n5\n2017\n1\n5.88\n9.06\n1.05\n16.68\n\n\n6\n2017\n2\n6.02\n8.41\n0.61\n13.98"
  },
  {
    "objectID": "posts/1031_.html#분기별-선형모형",
    "href": "posts/1031_.html#분기별-선형모형",
    "title": "분기별 선형모형",
    "section": "분기별 선형모형",
    "text": "분기별 선형모형\n\nin1_bin\n\ndata_bin %&gt;% ggplot(aes(x=t, y=in1_bin, color = factor(quat)))+\n  geom_point()+\n  geom_smooth(data = data_bin,aes(x=t,y=in1_bin,color = factor(quat)),method = \"lm\",se=FALSE)+\n  theme_minimal()\n\n`geom_smooth()` using formula = 'y ~ x'\n\n\n\n\n\n\n1분기\n\\[\ny = 5.58161 + 0.08196 * t\n\\]\n\nR-squared :\n\n\n\n[1] 0.8613146\n\n\n\nadj R-squared :\n\n\n\n[1] 0.8335775\n\n\n\np-value :\n\n\n\n[1] 0.002563184\n\n\n\n\n2분기\n\\[\ny = 5.69036 + 0.08661 * t\n\\]\n\nR-squared :\n\n\n\n[1] 0.8707973\n\n\n\nadj R-squared :\n\n\n\n[1] 0.8449568\n\n\n\np-value :\n\n\n\n[1] 0.002139097\n\n\n\n\n3분기\n\\[\ny = 5.98027 + 0.09741 * t\n\\]\n\nR-squared :\n\n\n\n[1] 0.942346\n\n\n\nadj R-squared :\n\n\n\n[1] 0.9308152\n\n\n\np-value :\n\n\n\n[1] 0.0002767648\n\n\n\n\n4분기\n\\[\ny = 6.02714 + 0.9991 * t\n\\]\n\nR-squared :\n\n\n\n[1] 0.8682876\n\n\n\nadj R-squared :\n\n\n\n[1] 0.8419451\n\n\n\np-value :\n\n\n\n[1] 0.002246747"
  },
  {
    "objectID": "posts/1031_.html#section",
    "href": "posts/1031_.html#section",
    "title": "분기별 선형모형",
    "section": "1031",
    "text": "1031\n\nfilter(data_bin,quat == 1)\n\n# A tibble: 7 × 7\n      t  year  quat in1_bin mul_bin jas_bin cha_bin\n  &lt;dbl&gt; &lt;dbl&gt; &lt;dbl&gt;   &lt;dbl&gt;   &lt;dbl&gt;   &lt;dbl&gt;   &lt;dbl&gt;\n1     1  2016     1    5.71    8.42    0.95    15.8\n2     5  2017     1    5.88    9.06    1.05    16.7\n3     9  2018     1    6.06    9.33    0.76    16.3\n4    13  2019     1    6.82   10.7     0.97    20.2\n5    17  2020     1    7.51   11.3     0.9     19.1\n6    21  2021     1    7.03   10.7     0.8     17.8\n7    25  2022     1    7.52   11.5     0.89    19  \n\n\n\nmodel_1 &lt;- lm(in1_bin ~ t + factor(quat), data = data_bin)\n\n\n#model_1 %&gt;% summary()\n\nmodel_1_pred &lt;- function(x, q) {\n  if (q == 1) {\n    return(model_1$coefficients[1] + model_1$coefficients[2] * x)\n  } else if (q == 2) {\n    return(model_1$coefficients[1] + model_1$coefficients[2] * x + model_1$coefficients[3])\n  } else if (q == 3) {\n    return(model_1$coefficients[1] + model_1$coefficients[2] * x + model_1$coefficients[4])\n  } else if (q == 4) {\n    return(model_1$coefficients[1] + model_1$coefficients[2] * x + model_1$coefficients[5])\n  } else {\n    return(NA)\n  }\n}\n\nd2 &lt;- data.frame(t = seq(29,32),quat = seq(1,4))\n\nd2$in1_bin_pred &lt;- mapply(model_1_pred, d2$t, d2$quat)\n\nd2\n\n   t quat in1_bin_pred\n1 29    1     8.110714\n2 30    2     8.366429\n3 31    3     8.905000\n4 32    4     9.089286\n\n\n\ndata_bin\n\n# A tibble: 28 × 7\n       t  year  quat in1_bin mul_bin jas_bin cha_bin\n   &lt;dbl&gt; &lt;dbl&gt; &lt;dbl&gt;   &lt;dbl&gt;   &lt;dbl&gt;   &lt;dbl&gt;   &lt;dbl&gt;\n 1     1  2016     1    5.71    8.42    0.95    15.8\n 2     2  2016     2    6.16    8.2     0.75    14.6\n 3     3  2016     3    6.54    8.73    0.78    15.4\n 4     4  2016     4    6.64    9.01    0.87    15.4\n 5     5  2017     1    5.88    9.06    1.05    16.7\n 6     6  2017     2    6.02    8.41    0.61    14.0\n 7     7  2017     3    6.61    9.41    0.64    16.2\n 8     8  2017     4    6.64   10.0     0.75    16.8\n 9     9  2018     1    6.06    9.33    0.76    16.3\n10    10  2018     2    6.2     9.24    0.62    16.2\n# ℹ 18 more rows\n\ndata_bin$in1bin_pred &lt;- mapply(model_1_pred,data_bin$t,data_bin$quat)\n\ndata_bin %&gt;% ggplot()+\n  geom_line(aes(t,in1bin_pred,color = factor(quat)))+\n#  geom_point(aes(t,in1bin_pred,color = factor(quat)))+\n  geom_point(aes(t,in1_bin, color = factor(quat)))\n\n\n\n\n\ny &lt;- model_1$coefficients[1] + model_1$coefficients[2]*5\n\nmodel_1$coefficients\n\n  (Intercept)             t factor(quat)2 factor(quat)3 factor(quat)4 \n   5.45799107    0.09147321    0.16424107    0.61133929    0.70415179 \n\n\n\nd1 &lt;- filter(data_bin,quat == 1)\nplot(d1$t,d1$in1_bin)\n\n\n\n\n\n66000*1.1\n\n[1] 72600\n\n\n\n1.1*0.9\n\n[1] 0.99"
  },
  {
    "objectID": "posts/playg.html",
    "href": "posts/playg.html",
    "title": "2023 빈도&심도 예측",
    "section": "",
    "text": "0.022 * 4575576.066\n\n[1] 100662.7\n\n\n\ndata_bin &lt;- readxl::read_xlsx(\"contents/2. 예측수준의 결정.xlsx\",sheet = 2)\ndata_sim &lt;- readxl::read_xlsx(\"contents/2. 예측수준의 결정.xlsx\",sheet = 3)\n\n\nin1_bin_mod &lt;- lm(in1_bin ~ t + factor(quat), data = data_bin)\nmul_bin_mod &lt;- lm(mul_bin ~ t + factor(quat), data = data_bin)\njas_bin_mod &lt;- lm(jas_bin ~ t + factor(quat), data = data_bin)\ncha_bin_mod &lt;- lm(cha_bin ~ t + factor(quat), data = data_bin)\n\nin1_sim_mod &lt;- lm(in1_sim ~ t, data = data_sim)\nmul_sim_mod &lt;- lm(mul_sim ~ t, data = data_sim)\njas_sim_mod &lt;- lm(jas_sim ~ t, data = data_sim)\ncha_sim_mod &lt;- lm(cha_sim ~ t + factor(quat), data = data_sim)\n\n\nin1bin &lt;- c(in1_bin_mod$coefficients[1] +in1_bin_mod$coefficients[2]*29, \n  in1_bin_mod$coefficients[1] +in1_bin_mod$coefficients[2]*30 + in1_bin_mod$coefficients[3],\n  in1_bin_mod$coefficients[1] +in1_bin_mod$coefficients[2]*31 + in1_bin_mod$coefficients[4],\n  in1_bin_mod$coefficients[1] +in1_bin_mod$coefficients[2]*32 + in1_bin_mod$coefficients[5])\n\nmulbin &lt;- c(mul_bin_mod$coefficients[1] +mul_bin_mod$coefficients[2]*29,\n  mul_bin_mod$coefficients[1] +mul_bin_mod$coefficients[2]*30 + mul_bin_mod$coefficients[3],\n  mul_bin_mod$coefficients[1] +mul_bin_mod$coefficients[2]*31 + mul_bin_mod$coefficients[4],\n  mul_bin_mod$coefficients[1] +mul_bin_mod$coefficients[2]*32 + mul_bin_mod$coefficients[5])\n\njasbin &lt;- c(jas_bin_mod$coefficients[1] +jas_bin_mod$coefficients[2]*29,\n  jas_bin_mod$coefficients[1] +jas_bin_mod$coefficients[2]*30 + jas_bin_mod$coefficients[3],\n  jas_bin_mod$coefficients[1] +jas_bin_mod$coefficients[2]*31 + jas_bin_mod$coefficients[4],\n  jas_bin_mod$coefficients[1] +jas_bin_mod$coefficients[2]*32 + jas_bin_mod$coefficients[5])\n\nchabin &lt;- c(cha_bin_mod$coefficients[1] +cha_bin_mod$coefficients[2]*29,\n  cha_bin_mod$coefficients[1] +cha_bin_mod$coefficients[2]*30 + cha_bin_mod$coefficients[3],\n  cha_bin_mod$coefficients[1] +cha_bin_mod$coefficients[2]*31 + cha_bin_mod$coefficients[4],\n  cha_bin_mod$coefficients[1] +cha_bin_mod$coefficients[2]*32 + cha_bin_mod$coefficients[5])\n\nin1sim &lt;- c(in1_sim_mod$coefficients[1] +in1_sim_mod$coefficients[2]*29, \n  in1_sim_mod$coefficients[1] +in1_sim_mod$coefficients[2]*30,\n  in1_sim_mod$coefficients[1] +in1_sim_mod$coefficients[2]*31,\n  in1_sim_mod$coefficients[1] +in1_sim_mod$coefficients[2]*32)\n\nmulsim &lt;- c(mul_sim_mod$coefficients[1] +mul_sim_mod$coefficients[2]*29,\n  mul_sim_mod$coefficients[1] +mul_sim_mod$coefficients[2]*30,\n  mul_sim_mod$coefficients[1] +mul_sim_mod$coefficients[2]*31,\n  mul_sim_mod$coefficients[1] +mul_sim_mod$coefficients[2]*32)\n\njassim &lt;- c(jas_sim_mod$coefficients[1] +jas_sim_mod$coefficients[2]*29,\n  jas_sim_mod$coefficients[1] +jas_sim_mod$coefficients[2]*30,\n  jas_sim_mod$coefficients[1] +jas_sim_mod$coefficients[2]*31,\n  jas_sim_mod$coefficients[1] +jas_sim_mod$coefficients[2]*32)\n\nchasim &lt;- c(cha_sim_mod$coefficients[1] +cha_sim_mod$coefficients[2]*29,\n  cha_sim_mod$coefficients[1] +cha_sim_mod$coefficients[2]*30 + cha_sim_mod$coefficients[3],\n  cha_sim_mod$coefficients[1] +cha_sim_mod$coefficients[2]*31 + cha_sim_mod$coefficients[4],\n  cha_sim_mod$coefficients[1] +cha_sim_mod$coefficients[2]*32 + cha_sim_mod$coefficients[5])\n\n\ndata_2023 &lt;- data.frame(t = seq(29,32),\n                        year = rep(2023,4),\n                        quat = seq(1,4),\n                        in1_bin = in1bin,\n                        mul_bin = mulbin,\n                        jas_bin = jasbin,\n                        cha_bin = chabin,\n                        in1_sim = in1sim,\n                        mul_sim = mulsim,\n                        jas_sim = jassim,\n                        cha_sim = chasim)\n\n\ndata_2023 %&gt;% kable()\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\nt\nyear\nquat\nin1_bin\nmul_bin\njas_bin\ncha_bin\nin1_sim\nmul_sim\njas_sim\ncha_sim\n\n\n\n\n29\n2023\n1\n8.110714\n12.45679\n0.9535714\n20.71036\n1555.442\n709.3833\n1212.663\n911.2393\n\n\n30\n2023\n2\n8.366429\n12.25536\n0.7464286\n19.67893\n1531.733\n714.9120\n1187.235\n835.1821\n\n\n31\n2023\n3\n8.905000\n12.81964\n0.8192857\n20.83893\n1508.025\n720.4406\n1161.807\n859.0821\n\n\n32\n2023\n4\n9.089286\n13.52964\n0.8807143\n21.51750\n1484.316\n725.9693\n1136.379\n881.2250"
  },
  {
    "objectID": "posts/playg.html#test_plot",
    "href": "posts/playg.html#test_plot",
    "title": "2023 빈도&심도 예측",
    "section": "test_plot",
    "text": "test_plot\n\nlibrary(dplyr)\nlibrary(stringr)\nlibrary(purrr)\n\nn &lt;- 6\n\nset.seed(123)\n\ncolors &lt;- c(\"#d35400\", \"#2980b9\", \"#2ecc71\", \"#f1c40f\", \"#2c3e50\", \"#7f8c8d\")\ncolors2 &lt;- c(\"#000004\", \"#3B0F70\", \"#8C2981\", \"#DE4968\", \"#FE9F6D\", \"#FCFDBF\")\n\ndf &lt;- data.frame(x = seq_len(n) - 1) |&gt; \n  mutate(\n    y = 10 + x + 10 * sin(x - 1),\n    z = 5 + (x*y) - median(x*y),\n    e = 10 * abs(rnorm(length(x))) + 2,\n    e = round(e, 1),\n    low = y - e,\n    high = y + e,\n    value = round(y - 1),\n    name = sample(fruit[str_length(fruit) &lt;= 5], size = n),\n    color = rep(colors, length.out = n)\n  ) |&gt; \n  mutate_if(is.numeric, round, 1) |&gt; \n  select(-e)\n\ndf &lt;- df |&gt; \n  mutate(\n    # label = name,\n    from = name[c(1, 1, 1, 2, 3, 4)],\n    to   = name[c(3, 4, 5, 3, 6, 6)],\n    weight = c(1, 1, 1, 1, 2, 2)\n  )\n\n\ndf &lt;- data.frame(\n  stringsAsFactors = FALSE,\n  name = c(\n    \"The Left\",\n    \"Social Democratic Party\",\n    \"Alliance 90/The Greens\",\n    \"Free Democratic Party\",\n    \"Christian Democratic Union\",\n    \"Christian Social Union in Bavaria\",\n    \"Alternative for Germany\"\n  ),\n  count = c(69, 153, 67, 80, 200, 46, 94),\n  col = c(\"#BE3075\", \"#EB001F\", \"#64A12D\", \"#FFED00\",\n          \"#000000\", \"#008AC5\", \"#009EE0\"\n  ),\n  abbrv = c(\"DIE LINKE\", \"SPD\", \"GRÜNE\", \"FDP\", \"CDU\", \"CSU\", \"AfD\")\n)\n\ndf\n\n                               name count     col     abbrv\n1                          The Left    69 #BE3075 DIE LINKE\n2           Social Democratic Party   153 #EB001F       SPD\n3            Alliance 90/The Greens    67 #64A12D     GRÜNE\n4             Free Democratic Party    80 #FFED00       FDP\n5        Christian Democratic Union   200 #000000       CDU\n6 Christian Social Union in Bavaria    46 #008AC5       CSU\n7           Alternative for Germany    94 #009EE0       AfD\n\nhchart(\n  df,\n  \"pie\",\n  hcaes(\n    name = name,\n    y = count,\n    label = abbrv,\n    color = col\n  )\n)\n\n\n\n\n\n\n\nd1 &lt;- data %&gt;% \n  group_by(GAI_COD) %&gt;% \n  summarise(n = n())\n\n\nd1 %&gt;% hchart(\"pie\",hcaes(GAI_COD,n))"
  },
  {
    "objectID": "posts/1102.html",
    "href": "posts/1102.html",
    "title": "2023 빈도&심도 예측",
    "section": "",
    "text": "in1_bin_mod &lt;- lm(in1_bin ~ t + factor(quat), data = data_bin)\nmul_bin_mod &lt;- lm(mul_bin ~ t + factor(quat), data = data_bin)\njas_bin_mod &lt;- lm(jas_bin ~ t + factor(quat), data = data_bin)\ncha_bin_mod &lt;- lm(cha_bin ~ t + factor(quat), data = data_bin)\n\nin1_sim_mod &lt;- lm(in1_sim ~ t, data = data_sim)\nmul_sim_mod &lt;- lm(mul_sim ~ t, data = data_sim)\njas_sim_mod &lt;- lm(jas_sim ~ t, data = data_sim)\ncha_sim_mod &lt;- lm(cha_sim ~ t + factor(quat), data = data_sim)"
  },
  {
    "objectID": "posts/1102.html#년-빈도심도-예측값",
    "href": "posts/1102.html#년-빈도심도-예측값",
    "title": "2023 빈도&심도 예측",
    "section": "2023년 빈도&심도 예측값",
    "text": "2023년 빈도&심도 예측값\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\nt\nyear\nquat\nin1_bin\nmul_bin\njas_bin\ncha_bin\nin1_sim\nmul_sim\njas_sim\ncha_sim\n\n\n\n\n29\n2023\n1\n8.110714\n12.45679\n0.9535714\n20.71036\n1555.442\n709.3833\n1212.663\n911.2393\n\n\n30\n2023\n2\n8.366429\n12.25536\n0.7464286\n19.67893\n1531.733\n714.9120\n1187.235\n835.1821\n\n\n31\n2023\n3\n8.905000\n12.81964\n0.8192857\n20.83893\n1508.025\n720.4406\n1161.807\n859.0821\n\n\n32\n2023\n4\n9.089286\n13.52964\n0.8807143\n21.51750\n1484.316\n725.9693\n1136.379\n881.2250"
  },
  {
    "objectID": "posts/1102.html#보험료",
    "href": "posts/1102.html#보험료",
    "title": "2023 빈도&심도 예측",
    "section": "보험료",
    "text": "보험료\n\n\n\n\n\nt\nyear\nin1_sun\nmul_sun\njas_sun\ncha_sun\n\n\n\n\n29\n2023\n12615.75\n8836.636\n1156.3605\n18872.09\n\n\n30\n2023\n12815.14\n8761.502\n886.1859\n16435.49\n\n\n31\n2023\n13428.96\n9235.792\n951.8517\n17902.35\n\n\n32\n2023\n13491.37\n9822.105\n1000.8251\n18961.76"
  },
  {
    "objectID": "posts/1102.html#년-순보험료-보험료",
    "href": "posts/1102.html#년-순보험료-보험료",
    "title": "2023 빈도&심도 예측",
    "section": "2023년 순보험료, 보험료",
    "text": "2023년 순보험료, 보험료\n\n\n\n\n\n\n\n\n\n\n\n\n\nyear\nquat\n대인 순보험료\n대물 순보험료\n자손 순보험료\n자차 순보험료\n\n\n\n\n2023\n1\n12615.75\n8836.636\n1156.3605\n18872.09\n\n\n2023\n2\n12815.14\n8761.502\n886.1859\n16435.49\n\n\n2023\n3\n13428.96\n9235.792\n951.8517\n17902.35\n\n\n2023\n4\n13491.37\n9822.105\n1000.8251\n18961.76\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\nyear\nquat\n대인 실보험료\n대물 실보험료\n자손 실보험료\n자차 실보험료\n\n\n\n\n2023\n1\n18022.49\n12623.77\n1651.944\n26960.13\n\n\n2023\n2\n18307.34\n12516.43\n1265.980\n23479.27\n\n\n2023\n3\n19184.23\n13193.99\n1359.788\n25574.79\n\n\n2023\n4\n19273.39\n14031.58\n1429.750\n27088.23"
  },
  {
    "objectID": "posts/1109.html",
    "href": "posts/1109.html",
    "title": "정리",
    "section": "",
    "text": "HI\n\n\nproject_data &lt;- read.csv(\"contents/프로젝트자료.csv\")\ndata_bin &lt;- readxl::read_xlsx(\"contents/2. 예측수준의 결정.xlsx\",sheet = 2)\ndata_sim &lt;- readxl::read_xlsx(\"contents/2. 예측수준의 결정.xlsx\",sheet = 3)\n\n\nbindo &lt;- c(nrow(filter(project_data,in1_los!=0))/nrow(project_data),\n           nrow(filter(project_data,mul_los!=0))/nrow(project_data),\n           nrow(filter(project_data,jas_los!=0))/nrow(project_data),\n           nrow(filter(project_data,cha_los!=0))/nrow(project_data))\n\nsimdo &lt;- c(sum(project_data$in1_los)/nrow(filter(project_data,in1_los!=0)),\n            sum(project_data$mul_los)/nrow(filter(project_data,mul_los!=0)),\n            sum(project_data$jas_los)/nrow(filter(project_data,jas_los!=0)),\n            sum(project_data$cha_los)/nrow(filter(project_data,cha_los!=0)))\n        \nsummary &lt;- data.frame(bindo,simdo)\nrow.names(summary) &lt;- c(\"대인\", \"대물\", \"자손\", \"자차\")\nsummary &lt;- summary %&gt;% mutate(sunbo = bindo*simdo)\n\n\nkable(summary)\n\n\n\n\n\nbindo\nsimdo\nsunbo\n\n\n\n\n대인\n0.0218325\n4575576.1\n99896.256\n\n\n대물\n0.0626342\n1283375.1\n80383.193\n\n\n자손\n0.0053686\n1033460.0\n5548.282\n\n\n자차\n0.2841804\n909640.4\n258501.951\n\n\n\n\n\n\nin1_bin_mod &lt;- lm(in1_bin ~ t + factor(quat), data = data_bin)\nmul_bin_mod &lt;- lm(mul_bin ~ t + factor(quat), data = data_bin)\njas_bin_mod &lt;- lm(jas_bin ~ t + factor(quat), data = data_bin)\ncha_bin_mod &lt;- lm(cha_bin ~ t + factor(quat), data = data_bin)\n\nin1_sim_mod &lt;- lm(in1_sim ~ year, data = data_sim)\nmul_sim_mod &lt;- lm(mul_sim ~ year, data = data_sim)\njas_sim_mod &lt;- lm(jas_sim ~ year, data = data_sim)\ncha_sim_mod &lt;- lm(cha_sim ~ t + factor(quat), data = data_sim)"
  },
  {
    "objectID": "posts/1107.html",
    "href": "posts/1107.html",
    "title": "2023 빈도&심도 예측_",
    "section": "",
    "text": "in1_bin_mod &lt;- lm(in1_bin ~ t + factor(quat), data = data_bin)\nmul_bin_mod &lt;- lm(mul_bin ~ t + factor(quat), data = data_bin)\njas_bin_mod &lt;- lm(jas_bin ~ t + factor(quat), data = data_bin)\ncha_bin_mod &lt;- lm(cha_bin ~ t + factor(quat), data = data_bin)\n\nin1_sim_mod &lt;- lm(in1_sim ~ t, data = data_sim)\nmul_sim_mod &lt;- lm(mul_sim ~ t, data = data_sim)\njas_sim_mod &lt;- lm(jas_sim ~ t, data = data_sim)\ncha_sim_mod &lt;- lm(cha_sim ~ t + factor(quat), data = data_sim)"
  },
  {
    "objectID": "posts/1107.html#년-빈도심도-예측값",
    "href": "posts/1107.html#년-빈도심도-예측값",
    "title": "2023 빈도&심도 예측_",
    "section": "2023년 빈도&심도 예측값",
    "text": "2023년 빈도&심도 예측값\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\nt\nyear\nquat\nin1_bin\nmul_bin\njas_bin\ncha_bin\nin1_sim\nmul_sim\njas_sim\ncha_sim\n\n\n\n\n29\n2023\n1\n8.110714\n12.45679\n0.9535714\n20.71036\n1555.442\n709.3833\n1212.663\n911.2393\n\n\n30\n2023\n2\n8.366429\n12.25536\n0.7464286\n19.67893\n1531.733\n714.9120\n1187.235\n835.1821\n\n\n31\n2023\n3\n8.905000\n12.81964\n0.8192857\n20.83893\n1508.025\n720.4406\n1161.807\n859.0821\n\n\n32\n2023\n4\n9.089286\n13.52964\n0.8807143\n21.51750\n1484.316\n725.9693\n1136.379\n881.2250"
  },
  {
    "objectID": "posts/1107.html#년-순보험료-보험료",
    "href": "posts/1107.html#년-순보험료-보험료",
    "title": "2023 빈도&심도 예측_",
    "section": "2023년 순보험료, 보험료",
    "text": "2023년 순보험료, 보험료\n\n\n\n\n\n\n\n\n\n\n\n\n\nyear\nquat\n대인 순보험료\n대물 순보험료\n자손 순보험료\n자차 순보험료\n\n\n\n\n2023\n1\n12615.75\n8836.636\n1156.3605\n18872.09\n\n\n2023\n2\n12815.14\n8761.502\n886.1859\n16435.49\n\n\n2023\n3\n13428.96\n9235.792\n951.8517\n17902.35\n\n\n2023\n4\n13491.37\n9822.105\n1000.8251\n18961.76\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\nyear\nquat\n대인 실보험료\n대물 실보험료\n자손 실보험료\n자차 실보험료\n\n\n\n\n2023\n1\n18022.49\n12623.77\n1651.944\n26960.13\n\n\n2023\n2\n18307.34\n12516.43\n1265.980\n23479.27\n\n\n2023\n3\n19184.23\n13193.99\n1359.788\n25574.79\n\n\n2023\n4\n19273.39\n14031.58\n1429.750\n27088.23\n\n\n\n\n\n\nfl &lt;- rbind(data_sim,select(data_2023,1,2,3,8,9,10,11))\nfl_sum &lt;- fl %&gt;% \n  group_by(year) %&gt;% \n  summarize(in1 = sum(in1_sim),\n            mul = sum(mul_sim),\n            jas = sum(jas_sim),\n            cha = sum(cha_sim))\n\n\nfl_sum %&gt;% ggplot(aes(x=year,y=in1))+\n  geom_point()+\n  theme_minimal()\n\n\n\nfl_sum %&gt;% ggplot(aes(x=year,y=mul))+\n  geom_point()+\n  theme_minimal()\n\n\n\nfl_sum %&gt;% ggplot(aes(x=year,y=jas))+\n  geom_point()+\n  theme_minimal()\n\n\n\nfl_sum %&gt;% ggplot(aes(x=year,y=cha))+\n  geom_point()+\n  theme_minimal()"
  },
  {
    "objectID": "posts/1114.html",
    "href": "posts/1114.html",
    "title": "ANOVA",
    "section": "",
    "text": "project_data &lt;- read.csv(\"contents/프로젝트자료.csv\")\n\ndf &lt;- project_data %&gt;% \n  filter(cha_los!=0) %&gt;% \n  mutate(GAI_COD = factor(GAI_COD),\n         차종 = as.factor(ifelse(car_knd %in% c(\"1A\",\"1E\"), \"소형\",\n                               ifelse(car_knd %in% c(\"1F\",\"1G\",\"1H\"), \"준중형\",\n                                      ifelse(car_knd %in% c(\"1L\",\"1M\",\"1N\"), \"중형\",\n                                             ifelse(car_knd %in% c(\"1P\",\"29\"), \"대형\",\"SUB/VAN\"))))))"
  },
  {
    "objectID": "posts/1114.html#데이터",
    "href": "posts/1114.html#데이터",
    "title": "ANOVA",
    "section": "",
    "text": "project_data &lt;- read.csv(\"contents/프로젝트자료.csv\")\n\ndf &lt;- project_data %&gt;% \n  filter(cha_los!=0) %&gt;% \n  mutate(GAI_COD = factor(GAI_COD),\n         차종 = as.factor(ifelse(car_knd %in% c(\"1A\",\"1E\"), \"소형\",\n                               ifelse(car_knd %in% c(\"1F\",\"1G\",\"1H\"), \"준중형\",\n                                      ifelse(car_knd %in% c(\"1L\",\"1M\",\"1N\"), \"중형\",\n                                             ifelse(car_knd %in% c(\"1P\",\"29\"), \"대형\",\"SUB/VAN\"))))))"
  },
  {
    "objectID": "posts/1114.html#가입년별-분산분석",
    "href": "posts/1114.html#가입년별-분산분석",
    "title": "ANOVA",
    "section": "가입년별 분산분석",
    "text": "가입년별 분산분석\n\naov(cha_los ~ GAI_COD, data = df) %&gt;% summary()\n\n             Df    Sum Sq   Mean Sq F value   Pr(&gt;F)    \nGAI_COD       7 1.173e+14 1.676e+13    4.78 2.79e-05 ***\nResiduals   786 2.756e+15 3.507e+12                     \n---\nSignif. codes:  0 '***' 0.001 '**' 0.01 '*' 0.05 '.' 0.1 ' ' 1"
  },
  {
    "objectID": "posts/1114.html#차종별-분산분석",
    "href": "posts/1114.html#차종별-분산분석",
    "title": "ANOVA",
    "section": "차종별 분산분석",
    "text": "차종별 분산분석\n\naov(cha_los ~ 차종, data = df) %&gt;% summary()\n\n             Df    Sum Sq   Mean Sq F value   Pr(&gt;F)    \n차종          4 7.622e+13 1.905e+13   5.374 0.000284 ***\nResiduals   789 2.797e+15 3.546e+12                     \n---\nSignif. codes:  0 '***' 0.001 '**' 0.01 '*' 0.05 '.' 0.1 ' ' 1\n\n\n\n\ndf %&gt;% ggplot(aes(x = cha_los, color = 차종, fill = 차종))+\n  geom_density(alpha = 0.3)+\n  scale_x_continuous(limits = c(0,1000000))+\n  theme_minimal()\n\nWarning: Removed 199 rows containing non-finite values (`stat_density()`).\n\n\n\n\n\n\ndf %&gt;% ggplot(aes(y = cha_los, color = 차종, fill = 차종))+\n  geom_boxplot()+\n  theme_minimal()+\n  scale_y_continuous(limits = c(0,1000000))\n\nWarning: Removed 199 rows containing non-finite values (`stat_boxplot()`)."
  },
  {
    "objectID": "posts/1116.html",
    "href": "posts/1116.html",
    "title": "_",
    "section": "",
    "text": "project_data &lt;- read.csv(\"contents/프로젝트자료.csv\")\n\nproject_data &lt;- project_data %&gt;%  \n  mutate(\n    GAI_COD = factor(GAI_COD),\n    차종 = as.factor(case_when(\n      car_knd %in% c(\"1A\", \"1E\") ~ \"소형\",\n      car_knd %in% c(\"1F\", \"1G\", \"1H\") ~ \"준중형\",\n      car_knd %in% c(\"1L\", \"1M\", \"1N\") ~ \"중형\",\n      car_knd %in% c(\"1P\", \"29\") ~ \"대형\",\n      TRUE ~ \"SUB/VAN\")))\n\n\nmyfunc_1 &lt;- function(df,y) {\n  in1_bin &lt;- sum(df$in1_los != 0) / nrow(df)\n  mul_bin &lt;- sum(df$mul_los != 0) / nrow(df)\n  jas_bin &lt;- sum(df$jas_los != 0) / nrow(df)\n  cha_bin &lt;- sum(df$cha_los != 0) / nrow(df)\n\n  in1_dep &lt;- sum(df$in1_los) / sum(df$in1_los != 0)\n  mul_dep &lt;- sum(df$mul_los) / sum(df$mul_los != 0)\n  jas_dep &lt;- sum(df$jas_los) / sum(df$jas_los != 0)\n  cha_dep &lt;- sum(df$cha_los) / sum(df$cha_los != 0)\n  \n  in1_sun &lt;- in1_bin*in1_dep\n  mul_sun &lt;- mul_bin*mul_dep\n  jas_sun &lt;- jas_bin*jas_dep\n  cha_sun &lt;- cha_bin*cha_dep\n  \n  result_df &lt;- data.frame(value = c(in1_bin, mul_bin, jas_bin, cha_bin, in1_dep, mul_dep, jas_dep, cha_dep,in1_sun, mul_sun, jas_sun, cha_sun) %&gt;% as.character())\n  rownames(result_df) &lt;- c(\"대인빈도\",\"대물빈도\",\"자손빈도\",\"자차빈도\",\"대인심도\",\"대물심도\",\"자손심도\",\"자차심도\",\"대인순보\",\"대물순보\",\"자손순보\",\"자차순보\")\n  colnames(result_df) &lt;- y\n  return(result_df)\n}\n\n\nd_2 &lt;- cbind(\n  myfunc_1(project_data %&gt;% filter(PIB_SEX==1),\"PIB_SEX_1\"),\n  myfunc_1(project_data %&gt;% filter(PIB_SEX==2),\"PIB_SEX_2\"),\n  myfunc_1(project_data %&gt;% filter(GAI_COD==1),\"GAI_COD_1\"),\n  myfunc_1(project_data %&gt;% filter(GAI_COD==2),\"GAI_COD_2\"),\n  myfunc_1(project_data %&gt;% filter(GAI_COD==3),\"GAI_COD_3\"),\n  myfunc_1(project_data %&gt;% filter(GAI_COD==4),\"GAI_COD_4\"),\n  myfunc_1(project_data %&gt;% filter(GAI_COD==5),\"GAI_COD_5\"),\n  myfunc_1(project_data %&gt;% filter(GAI_COD==6),\"GAI_COD_6\"),\n  myfunc_1(project_data %&gt;% filter(GAI_COD==7),\"GAI_COD_7\"),\n  myfunc_1(project_data %&gt;% filter(GAI_COD==8),\"GAI_COD_8\"),\n  myfunc_1(project_data %&gt;% filter(차종==\"소형\"),\"차종_소형\"),\n  myfunc_1(project_data %&gt;% filter(차종==\"중형\"),\"차종_중형\"),\n  myfunc_1(project_data %&gt;% filter(차종==\"준중형\"),\"차종_준중형\"),\n  myfunc_1(project_data %&gt;% filter(차종==\"대형\"),\"차종_대형\"),\n  myfunc_1(project_data %&gt;% filter(차종==\"SUB/VAN\"),\"차종_SUB/VAN\")\n  )"
  }
]